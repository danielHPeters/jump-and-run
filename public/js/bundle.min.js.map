{"version":3,"sources":["webpack:/webpack/bootstrap 7e2595a3c820bde6a3f7","webpack:///src/client/app.js","webpack:///src/client/application/AssetManager.js","webpack:///src/client/graphics/2D/SpriteSheet.js","webpack:///src/client/application/InputManager.js","webpack:///src/client/graphics/2D/Animation.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","update","socket","emit","inputManager","registeredInputs","window","requestAnimationFrame","draw","players","playerId","spritesLoaded","currentPlayer","currentAnimation","keys","forEach","grounded","assetManager","animationLeft","height","key","player","viewport","areaId","animationIdle","animationRight","playSound","ctx","position","_x","_y","width","blocks","block","drawImage","getSprite","material","x","canvas","lives","io","document","getElementById","_InputManager2","default","_AssetManager2","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","addEventListener","getContext","queueDownload","loadAll","_Animation2","getSpriteSheet","textContent","on","engine","id","AssetManager","_classCallCheck","this","cache","audio","sprite","spriteSheet","bufferCache","queue","succesCount","errorCount","initAudioContext","AudioContext","webkitAudioContext","context","e","alert","path","type","push","_this","length","item","loadAudio","loadSprite","loadSpriteSheet","_this2","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","done","onerror","send","_this3","img","Image","src","_SpriteSheet2","loop","arguments","undefined","sound","createBufferSource","connect","destination","loopEnd","Math","floor","duration","start","SpriteSheet","sourcePath","frameWidth","frameHeight","image","framesPerRow","InputManager","initializeKeyHandler","initializeTouchHandler","event","evt","preventDefault","xDown","touches","clientX","yDown","clientY","xUp","yUp","yDiff","handlerInstance","Animation","speed","end","offsetBottom","sequence","currentFrame","counter","frame","y","row","col"],"mappings":"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","file":"bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7e2595a3c820bde6a3f7","'use strict'\r\n\r\nimport AssetManager from './application/AssetManager'\r\nimport InputManager from './application/InputManager'\r\nimport Animation from './graphics/2D/Animation'\r\n\r\nlet socket = io()\r\nlet canvas = document.getElementById('game')\r\nlet inputManager = new InputManager(canvas)\r\nlet assetManager = new AssetManager()\r\nlet playerId // player id is registered here on socket connection\r\nlet ctx // graphics context\r\nlet spritesLoaded = false // set to true when asset manager finishes to start drawing\r\nlet animationRight\r\nlet animationLeft\r\nlet animationIdle\r\nlet currentAnimation\r\n\r\n/**\r\n * Shim for animation loop.\r\n * Selects one that's available or uses fallback with setTimeout.\r\n */\r\nwindow.requestAnimFrame = (() => {\r\n  return window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    function (callback, element) {\r\n      window.setTimeout(callback, 1000 / 60)\r\n    }\r\n})()\r\n\r\n/**\r\n * Download all game assets.\r\n */\r\nfunction init () {\r\n  // check if canvas is supported by browser\r\n  if (canvas.getContext) {\r\n    socket.emit('new player')\r\n    ctx = canvas.getContext('2d')\r\n    // Add all sprites and music files to the download queue\r\n    assetManager.queueDownload('ambient', 'assets/audio/ambient/ambient.mp3', 'audio')\r\n    assetManager.queueDownload('jump', 'assets/audio/effects/jump.wav', 'audio')\r\n    assetManager.queueDownload('background', 'assets/textures/background.png', 'texture')\r\n    assetManager.queueDownload('player', 'assets/textures/player.png', 'texture')\r\n    assetManager.queueDownload('stone-block', 'assets/textures/stone-block.jpg', 'texture')\r\n    assetManager.queueDownload('heart', 'assets/textures/heart.png', 'texture')\r\n    assetManager.queueDownload('playerSheet', 'assets/textures/test.png', 'spriteSheet')\r\n    assetManager.loadAll(() => {\r\n      animationRight = new Animation(assetManager.getSpriteSheet('playerSheet'), 3, 3, 6, 12)\r\n      animationLeft = new Animation(assetManager.getSpriteSheet('playerSheet'), 3, 3, 6, 12)\r\n      animationIdle = new Animation(assetManager.getSpriteSheet('playerSheet'), 10, 0, 2, 12)\r\n      currentAnimation = animationLeft\r\n      // Play ambient sound\r\n      assetManager.playSound('ambient', true)\r\n      update()\r\n      // Draw Background only once to improve performance\r\n      document.getElementById('background').getContext('2d').drawImage(assetManager.getSprite('background'), 0, 0, canvas.width, canvas.height)\r\n      // tells socket.on(state) that all sprites needed for drawing are downloaded\r\n      spritesLoaded = true\r\n    })\r\n  } else {\r\n    document.getElementById('unsupported').textContent = 'Please update your browser or download another one which supports HTML5'\r\n  }\r\n}\r\n\r\n/**\r\n * Sends user input to the server.\r\n */\r\nfunction update () {\r\n  socket.emit('movement', inputManager.registeredInputs)\r\n  // Request new frame when ready. Allows the game to play in a loop in approximately 60fps\r\n  window.requestAnimationFrame(() => update())\r\n}\r\n\r\n/**\r\n * Draw all objects.\r\n * @param players player objects with objects within their viewport\r\n */\r\nfunction draw (players) {\r\n  if (playerId && players[playerId] && spritesLoaded) {\r\n    let currentPlayer = players[playerId]\r\n    currentAnimation.update()\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    Object.keys(players).forEach(key => {\r\n      const player = players[key]\r\n      // Make sure to only draw players in the same area\r\n      if (player.viewport.areaId === currentPlayer.viewport.areaId) {\r\n        if (player.registeredInputs['a']) {\r\n          currentAnimation = animationLeft\r\n        }\r\n        if (player.registeredInputs['d']) {\r\n          currentAnimation = animationRight\r\n        }\r\n        if (!player.registeredInputs['d'] && !player.registeredInputs['a']) {\r\n          currentAnimation = animationIdle\r\n        }\r\n        currentAnimation.draw(ctx, player.position._x, player.position._y, player.width, player.height)\r\n      }\r\n    })\r\n    if (currentPlayer.registeredInputs['w'] || currentPlayer.registeredInputs[' ']) {\r\n      // Check if players is not already jumping\r\n      if (!currentPlayer.jumping && currentPlayer.grounded) {\r\n        assetManager.playSound('jump')\r\n      }\r\n    }\r\n    // Draw all blocks\r\n    players[playerId].viewport.blocks.forEach(block => {\r\n      ctx.drawImage(assetManager.getSprite(block.material.name), block.position._x, block.position._y, block.width, block.height)\r\n    })\r\n    // Display health\r\n    let x = canvas.width - 35\r\n    let y = 5\r\n    for (let i = 0; i < players[playerId].lives; i++) {\r\n      ctx.drawImage(assetManager.getSprite('heart'), x, y, 30, 30)\r\n      x -= 30\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * modern browser equivalent of jQuery $(document).ready()\r\n */\r\ndocument.addEventListener('DOMContentLoaded', init())\r\n\r\n/**\r\n * Initialize player id on socket connection\r\n */\r\nsocket.on('connect', () => {\r\n  // Tell server to add this player\r\n  socket.emit('new player')\r\n  // remember socket id to identify current player when drawing\r\n  playerId = socket.io.engine.id\r\n})\r\n\r\n/**\r\n * Listen to server sending objects to draw.\r\n * Contains the drawing loop\r\n */\r\nsocket.on('state', players => {\r\n  draw(players)\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.js","import SpriteSheet from './../graphics/2D/SpriteSheet'\n\n/**\n * Asset manager.\n *\n * @author Daniel Peters\n * @version 2.0\n */\nexport default class AssetManager {\n  constructor () {\n    this.cache = {\n      audio: [],\n      sprite: [],\n      spriteSheet: []\n    }\n    this.bufferCache = []\n    this.queue = []\n    this.succesCount = 0\n    this.errorCount = 0\n    this.initAudioContext()\n  }\n\n  initAudioContext () {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || window.webkitAudioContext\n      this.context = new AudioContext()\n    } catch (e) {\n      alert('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   * Queue an audio file for download.\n   *\n   * @param {string} name name of the audio file\n   * @param {string} path location of the audio file\n   * @param {string} type of file\n   */\n  queueDownload (name, path, type) {\n    this.queue.push({name: name, path: path, type: type})\n  }\n\n  /**\n   * Download all files and execute callback function when done.\n   *\n   * @param callback function to be executed when downloading is done\n   */\n  loadAll (callback) {\n    if (this.queue.length === 0) {\n      callback()\n    }\n    this.queue.forEach(item => {\n      if (item.type === 'audio') {\n        this.loadAudio(item, callback)\n      } else if (item.type === 'texture') {\n        this.loadSprite(item, callback)\n      } else if (item.type === 'spriteSheet') {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param {{}} item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback) {\n    let request = new XMLHttpRequest()\n\n    request.open('GET', item.path, true)\n    request.responseType = 'arraybuffer'\n\n    // Decode asynchronously\n    request.onload = () => {\n      this.context.decodeAudioData(\n        request.response, buffer => {\n          this.cache.audio[item.name] = buffer\n          this.succesCount += 1\n          if (this.done()) {\n            callback()\n          }\n        }\n      )\n    }\n\n    // Register error\n    request.onerror = () => {\n      this.errorCount += 1\n      if (this.done()) {\n        callback()\n      }\n    }\n    request.send()\n  }\n\n  /**\n   * Load simple sprites as image.\n   *\n   * @param item sprite info\n   * @param callback called upon downloading all\n   */\n  loadSprite (item, callback) {\n    let img = new Image()\n    img.addEventListener('load', () => {\n      this.succesCount += 1\n\n      if (this.done()) {\n        callback()\n      }\n    }, false)\n    img.addEventListener('error', () => {\n      this.errorCount += 1\n\n      if (this.done()) {\n        callback()\n      }\n    }, false)\n    img.src = item.path\n    this.cache.sprite[item.name] = img\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback) {\n    this.cache.spriteSheet[item.name] = new SpriteSheet(item.path, 32, 64)\n    this.succesCount += 1\n    if (this.done()) {\n      callback()\n    }\n  }\n\n  /**\n   * Get sprite by name.\n   *\n   * @param {string} name sprite name\n   */\n  getSprite (name) {\n    return this.cache.sprite[name]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {string} name sprite sheet name\n   */\n  getSpriteSheet (name) {\n    return this.cache.spriteSheet[name]\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param name filename\n   * @param loop set to true for looped sounds like ambient music\n   */\n  playSound (name, loop = false) {\n    let sound = this.context.createBufferSource()\n\n    sound.buffer = this.cache.audio[name]\n    sound.connect(this.context.destination)\n    if (loop) {\n      sound.loop = loop\n      sound.loopEnd = Math.floor(sound.buffer.duration)\n    }\n    sound.start(0)\n  }\n\n  /**\n   * Check if downloading is finished.\n   * @returns {boolean}\n   */\n  done () {\n    return this.queue.length === this.succesCount + this.errorCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/AssetManager.js","/**\n * Sprite sheet definition.\n */\nexport default class SpriteSheet {\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   * @param sourcePath\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (sourcePath, frameWidth, frameHeight) {\n    this.image = new Image()\n    this.frameWidth = frameWidth\n    this.frameHeight = frameHeight\n\n    this.image.addEventListener('load', () => {\n      this.framesPerRow = Math.floor(this.image.width / this.frameWidth)\n    })\n\n    this.image.src = sourcePath\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/SpriteSheet.js","/**\n * Input manager.\n *\n * @author Daniel Peters\n * @version 2.0\n */\nexport default class InputManager {\n  constructor () {\n    this.initializeKeyHandler()\n    this.initializeTouchHandler()\n\n    // All keystrokes and touch swipes are registered here\n    // This object is then sent to the server to process player movement\n    this.registeredInputs = {}\n  }\n\n  /**\n   * Handle keyboard key presses.\n   * Only booleans are set to express the movement direction intention\n   * This allows the separation of keystrokes from actual movement.\n   */\n  initializeKeyHandler () {\n    window.addEventListener('keydown', event => { this.registeredInputs[event.key] = true }, false)\n    window.addEventListener('keyup', event => { this.registeredInputs[event.key] = false }, false)\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler () {\n    // Register the event listeners\n    window.addEventListener('touchstart', handleTouchStart, false)\n    window.addEventListener('touchmove', handleTouchMove, false)\n    window.addEventListener('touchend', handleTouchEnd, false)\n\n    let xDown = null\n    let yDown = null\n    let handlerInstance = this\n\n    function handleTouchStart (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      xDown = evt.touches[0].clientX\n      yDown = evt.touches[0].clientY\n    }\n\n    function handleTouchMove (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      // do nothing if no touch direction is registered\n      if (!xDown || !yDown) {\n        return\n      }\n\n      let xUp = evt.touches[0].clientX\n      let yUp = evt.touches[0].clientY\n\n      // Subtract start currently touched location from start location\n      let xDiff = xDown - xUp\n      let yDiff = yDown - yUp\n\n      // Positive values equals left. Negative values equals right\n      if (xDiff > 0) {\n        handlerInstance.registeredInputs['a'] = true\n      } else {\n        handlerInstance.registeredInputs['d'] = true\n      }\n\n      // Positive = up. Negative = down\n      if (yDiff > 0) {\n        handlerInstance.registeredInputs['w'] = true\n      } else {\n        /* down swipe */\n      }\n      /* reset values */\n      xDown = null\n      yDown = null\n    }\n\n    function handleTouchEnd (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      Object.keys(handlerInstance.registeredInputs).forEach(key => { handlerInstance.registeredInputs[key] = false })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/InputManager.js","/**\n * Implements sprite animation using sprite sheet.\n *\n * @author Daniel Peters\n * @version 0.3\n */\nexport default class Animation {\n  /**\n   * Constructor Sets all animation data.\n   *\n   * @param {SpriteSheet} spriteSheet corresponding sprite sheet\n   * @param {number} speed animation speed\n   * @param {number} start animation start frame\n   * @param {number} end animation end frame\n   * @param {number} offsetBottom drawing offset at the bottom of source image\n   */\n  constructor (spriteSheet, speed, start, end, offsetBottom = 0) {\n    this.spriteSheet = spriteSheet\n    this.speed = speed\n    this.sequence = []\n    this.currentFrame = 0\n    this.counter = 0\n    this.offsetBottom = offsetBottom\n\n    for (let frame = start; frame <= end; frame++) {\n      this.sequence.push(frame)\n    }\n  }\n\n  /**\n   * Update animation frames.\n   */\n  update () {\n    if (this.counter === (this.speed - 1)) {\n      this.currentFrame = (this.currentFrame + 1) % this.sequence.length\n    }\n    this.counter = (this.counter + 1) % this.speed\n  }\n\n  /**\n   * Draw current frame\n   * @param ctx canvas context\n   * @param x location x\n   * @param y location y\n   * @param width display width\n   * @param height display height\n   */\n  draw (ctx, x, y, width, height) {\n    let row = Math.floor(this.sequence[this.currentFrame] / this.spriteSheet.framesPerRow)\n    let col = Math.floor(this.sequence[this.currentFrame] % this.spriteSheet.framesPerRow)\n    ctx.drawImage(\n      this.spriteSheet.image,\n      col * this.spriteSheet.frameWidth,\n      row * this.spriteSheet.frameHeight,\n      this.spriteSheet.frameWidth,\n      this.spriteSheet.frameHeight - this.offsetBottom,\n      x,\n      y,\n      width,\n      height\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/Animation.js"]}