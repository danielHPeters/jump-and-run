{"version":3,"sources":["webpack:/webpack/bootstrap 7e93d9480b7c6c1c850c","webpack:///src/client/model/Entity.js","webpack:///src/client/model/Player.js","webpack:///src/client/model/Vector.js","webpack:///src/client/model/Block.js","webpack:///src/client/model/Material.js","webpack:///src/client/app.js","webpack:///src/client/model/Game.js","webpack:///src/client/model/CollisionBounds.js","webpack:///src/client/model/Canvas.js","webpack:///src/client/model/Area.js","webpack:///src/client/application/AudioManager.js","webpack:///src/client/application/AssetManager.js","webpack:///src/client/application/KeyboardEventHandler.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Entity","x","y","width","height","material","_classCallCheck","this","position","_Vector2","default","velocity","acceleration","_CollisionBounds2","ctx","drawImage","getSprite","instance","Constructor","TypeError","key","Player","vector","lives","speed","value","history","scalar","friction","gravity","Vector","grounded","magnitude","mag","max","normalize","mult","to","Math","sqrt","direction","pow","v1","v2","running","hWidths","player","_createClass","defineProperties","target","props","length","descriptor","writable","protoProps","staticProps","colDir","Material","resource","sprite","game","assetManager","current","pos","_this","_possibleConstructorReturn","Block","__proto__","getPrototypeOf","solid","_Entity3","obj","init","canvas","document","getElementById","map","_Canvas2","_Material2","area2","area3","_Area2","audioManager","load","queueDownload","animate","textContent","div","_AudioManager2","_interopRequireDefault","Game","move","block","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","Canvas","clearRect","CollisionBounds","getContext","areas","keyActionsRegister","keyEventHandler","getKeyActionsRegister","pl","bottom","right","generateBlocks","blocksList","Area","top","arguments","undefined","gameObjects","objWidth","forEach","objX","objY","j","blocks","push","_Block2","objHeight","blk","ready","_Player2","checkEdges","_Entity","playSound","_this2","jumping","set","vX","hHeights","vY","oY","left","oX","hasRight","cache","AudioManager","bufferCache","window","context","AudioContext","webkitAudioContext","alert","e","url","callback","request","responseType","buffer","response","console","log","send","loop","sound","connect","destination","loopEnd","floor","duration","start","AssetManager","succesCount","errorCount","downloadQueue","path","managerInstance","Image","item","img","addEventListener","src","KeyboardEventHandler","initializeKeyHandler","event"],"mappings":"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","file":"bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7e93d9480b7c6c1c850c","import Vector from './Vector'\nimport CollisionBounds from './CollisionBounds'\n\n/**\n * Created by Daniel on 2017-09-18.\n */\nexport default class Entity {\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {Material} material\n   */\n  constructor (x, y, width, height, material) {\n    this.position = new Vector(x, y)\n    this.velocity = new Vector(0, 0)\n    this.acceleration = new Vector(0, 0)\n    this.width = width\n    this.height = height\n    this.material = material\n  }\n\n  setPosition (x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  getX () {\n    return this.x\n  }\n\n  setX (x) {\n    this.x = x\n  }\n\n  getY () {\n    return this.y\n  }\n\n  setY (y) {\n    this.y = y\n  }\n\n  getWidth () {\n    return this.width\n  }\n\n  setWidth (width) {\n    this.width = width\n  }\n\n  getCollisionBox () {\n    return new CollisionBounds(this.position.x, this.position.y, this.width, this.height)\n  }\n\n  render (ctx) {\n    ctx.drawImage(this.material.getSprite(), this.position.x, this.position.y, this.width, this.height)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/model/Entity.js","import Entity from './Entity'\nimport Block from './Block'\nimport Vector from './Vector'\n\n/**\n * Created by Daniel on 2017-09-18.\n */\nexport default class Player extends Entity {\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {CollisionBounds} collisionBox\n   * @param {Material} material\n   */\n  constructor (x, y, width, height, material) {\n    super(x, y, width, height, material)\n    this.lives = 3\n    this.speed = 3.6\n    this.running = false\n    this.jumping = false\n    this.grounded = false\n    this.history = []\n    this.friction = 0.8\n    this.gravity = 0.2\n  }\n\n  /**\n   *\n   * @param game\n   */\n  move (game) {\n    if (this.keyActionsRegister['w'] || this.keyActionsRegister[' ']) {\n      if (!this.jumping && this.grounded) {\n        game.audioManager.playSound('jump')\n        this.jumping = true\n        this.grounded = false\n        this.velocity.y = -this.speed * 2\n      }\n    }\n\n    if (this.keyActionsRegister['a']) {\n      if (this.velocity.x > -this.speed) {\n        this.velocity.x--\n      }\n    }\n\n    if (this.keyActionsRegister['d']) {\n      if (this.velocity.x < this.speed) {\n        this.velocity.x++\n      }\n    }\n    this.velocity.x *= this.friction\n    this.velocity.y += this.gravity\n\n    this.grounded = false\n\n    game.current.blocks.forEach(block => {\n      const direction = this.checkCollision(this, block)\n\n      if (direction === 'l' || direction === 'r') {\n        this.velocity.x = 0\n        this.jumping = false\n      } else if (direction === 'b') {\n        this.grounded = true\n        this.jumping = false\n      } else if (direction === 't') {\n        this.velocity.y *= -1\n      }\n    })\n\n    if (this.grounded) {\n      this.velocity.y = 0\n    }\n\n    this.position.add(this.velocity)\n  }\n\n  goBack () {\n    if (this.history.length !== 0) {\n      this.position.set(this.history[this.history.length - 1])\n    }\n  }\n\n  gainLife () {\n    this.lives += 1\n  }\n\n  loseLife () {\n    this.lives -= 1\n  }\n\n  toggleRun () {\n    this.running = !this.running\n  }\n\n  checkCollision (player, object) {\n    if (object instanceof Block && !object.solid) {\n      return\n    }\n\n    // get the vectors to check against\n    let vX = (player.position.x + (player.width / 2)) - (object.position.x + (object.width / 2))\n    let vY = (player.position.y + (player.height / 2)) - (object.position.y + (object.height / 2))\n    // add the half widths and half heights of the objects\n    let hWidths = (player.width / 2) + (object.width / 2)\n    let hHeights = (player.height / 2) + (object.height / 2)\n    let colDir = null\n\n    // if the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision\n    // figures out on which side we are colliding (top, bottom, left, or right)\n    if (Math.abs(vX) < hWidths && Math.abs(vY) < hHeights) {\n      let oX = hWidths - Math.abs(vX)\n      let oY = hHeights - Math.abs(vY)\n      if (oX >= oY) {\n        if (vY > 0) {\n          colDir = 't'\n          player.position.y += oY\n        } else {\n          colDir = 'b'\n          player.position.y -= oY\n          player.jumping = false\n        }\n      } else {\n        if (vX > 0) {\n          colDir = 'l'\n          player.position.x += oX\n        } else {\n          colDir = 'r'\n          player.position.x -= oX\n        }\n      }\n    }\n\n    return colDir\n  }\n\n  /**\n   *\n   * @param {Game} game\n   */\n  checkEdges (game) {\n    if (this.position.x > game.canvas.width && game.current.hasRight()) {\n      game.current = game.current.right\n      this.position.x = game.current.blocks[0].width\n    } else if (this.position.x < 0 && game.current.hasLeft()) {\n      game.current = game.current.left\n      this.position.x = game.canvas.width - game.current.blocks[0].width\n    } else if (this.position.y > game.canvas.height) {\n      game.current = game.current.bottom\n      this.position.y = game.current.blocks[0].height\n    } else if (this.position.y < 0) {\n      game.current = game.current.top\n      this.position.y = game.canvas.height - game.current.blocks[0].height\n    }\n  }\n\n  drawHearts (game, ctx) {\n    let pos = new Vector(game.canvas.width - 35, 5)\n    for (let i = 0; i < game.player.lives; i++) {\n      ctx.drawImage(game.assetManager.cache['heart'], pos.x, pos.y, 30, 30)\n      pos.x -= 30\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/model/Player.js","/**\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector {\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  set (x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  setVector (vector) {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  add (vector) {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  static add (v1, v2) {\n    return new Vector(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  sub (vector) {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  static sub (v1, v2) {\n    return new Vector(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  mult (scalar) {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  static mult (vector, scalar) {\n    return new Vector(vector.x * scalar, vector.y * scalar)\n  }\n\n  div (scalar) {\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  static div (vector, scalar) {\n    return new Vector(vector.x / scalar, vector.y / scalar)\n  }\n\n  mag () {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  negative () {\n    return new Vector(-this.x, -this.y)\n  }\n\n  normalize () {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.div(magnitude)\n    }\n  }\n\n  limit (max) {\n    if (this.mag() > max) {\n      this.normalize()\n      this.mult(max)\n    }\n  }\n\n  heading () {\n\n  }\n\n  rotate () {\n\n  }\n\n  lerp () {\n\n  }\n\n  distanceTo (to) {\n    return Math.sqrt(Math.pow(to.x - this.x, 2) + Math.pow(to.y - this.y, 2))\n  }\n\n  angleBetween () {\n\n  }\n\n  dot () {\n\n  }\n\n  cross () {\n\n  }\n\n  random2D () {\n\n  }\n\n  random3D () {\n\n  }\n\n  clone () {\n    return new Vector(this.x, this.y)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/model/Vector.js","import Entity from './Entity'\n\nexport default class Block extends Entity {\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {Material} material\n   */\n  constructor (x, y, width, height, material) {\n    super(x, y, width, height, material)\n    this.solid = true\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  isSolid () {\n    return this.solid\n  }\n\n  /**\n   *\n   * @param {boolean} solid\n   */\n  setSolid (solid) {\n    this.solid = solid\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/model/Block.js","/**\n * Created by Daniel on 2017-09-18.\n */\nexport default class Material {\n  /**\n   *\n   * @param {string} resource\n   */\n  constructor (resource) {\n    this.name = resource\n    this.sprite = null\n  }\n\n  /**\n   *\n   * @param {Image} sprite\n   */\n  setSprite (sprite) {\n    this.sprite = sprite\n  }\n\n  /**\n   *\n   * @returns {Image | null}\n   */\n  getSprite () {\n    return this.sprite\n  }\n\n  getName () {\n    return this.name\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/model/Material.js","'use strict'\r\nimport Game from './model/Game'\r\nimport Player from './model/Player'\r\nimport Canvas from './model/Canvas'\r\nimport Area from './model/Area'\r\nimport AudioManager from './application/AudioManager'\r\nimport AssetManager from './application/AssetManager'\r\nimport KeyboardEventHandler from './application/KeyboardEventHandler'\r\nimport Material from './model/Material'\r\n\r\n/**\r\n *\r\n * @param ctx\r\n * @param game\r\n */\r\nfunction animate (ctx, game) {\r\n  // Clear game before drawing new animation\r\n  ctx.clearRect(0, 0, game.canvas.width, game.canvas.height)\r\n\r\n  // Update game logic\r\n  game.update()\r\n\r\n  // Render objects\r\n  game.render(ctx)\r\n\r\n  // Request new frame when ready. Allows the game to play in a loop\r\n  window.requestAnimationFrame(() => animate(ctx, game))\r\n}\r\n\r\n/**\r\n * Initializes all game Objects\r\n */\r\nfunction init () {\r\n  let canvas = document.getElementById('game')\r\n\r\n  if (canvas.getContext) {\r\n    let ctx = canvas.getContext('2d')\r\n    // let player = new Player('Player1', 100, 100, 60, 60, new Material('player'))\r\n    let map = new Canvas(0, 0, canvas.width, canvas.height, new Material('background'))\r\n    let audioManager = new AudioManager()\r\n    let game = new Game(map, audioManager)\r\n    let area1 = new Area(game)\r\n    let area2 = new Area(game)\r\n    let area3 = new Area(game)\r\n    let gameObjects = []\r\n    let assetManager = new AssetManager()\r\n    let keyEventHandler = new KeyboardEventHandler(canvas)\r\n\r\n    let pl = 'player'\r\n    let bl = 'block'\r\n    let se = 'secret'\r\n    let no = null\r\n    let blocksList = [\r\n      [bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl],\r\n      [bl, no, no, no, no, bl, no, no, no, no, no, no, no, no, bl],\r\n      [bl, no, no, no, no, bl, no, no, no, no, no, no, no, no, bl],\r\n      [bl, no, no, no, no, bl, no, no, no, no, no, no, no, no, bl],\r\n      [bl, no, no, no, no, no, no, no, no, bl, bl, no, no, no, bl],\r\n      [bl, no, no, no, no, no, no, no, no, no, no, no, no, no, bl],\r\n      [bl, bl, bl, bl, bl, bl, bl, bl, no, no, no, no, no, no, se],\r\n      [bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl]\r\n    ]\r\n\r\n    let blocksList2 = [\r\n      [bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl],\r\n      [bl, no, no, no, no, bl, no, no, no, no, no, no, no, no, bl],\r\n      [bl, no, no, no, no, bl, no, no, no, no, no, no, no, no, bl],\r\n      [bl, no, no, no, no, bl, no, no, no, no, no, no, no, pl, bl],\r\n      [bl, no, no, no, no, no, no, no, no, bl, bl, bl, bl, bl, bl],\r\n      [bl, no, no, no, no, no, no, no, no, no, no, no, no, no, bl],\r\n      [se, no, no, no, no, no, bl, bl, no, no, no, no, no, no, bl],\r\n      [bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, no, no, bl]\r\n    ]\r\n\r\n    let blocksList3 = [\r\n      [bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, no, no, bl],\r\n      [bl, no, no, no, no, no, no, no, no, no, no, no, no, no, bl],\r\n      [bl, no, no, no, no, no, no, no, no, no, no, no, no, bl, bl],\r\n      [bl, no, no, no, no, no, no, no, no, no, no, no, bl, bl, bl],\r\n      [bl, bl, bl, bl, bl, no, no, no, no, bl, bl, bl, bl, bl, bl],\r\n      [bl, no, no, no, no, no, no, no, no, no, no, no, no, no, bl],\r\n      [bl, no, no, no, no, no, bl, bl, no, no, no, no, no, no, bl],\r\n      [bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl, bl]\r\n    ]\r\n    area1.right = area2\r\n    area2.left = area1\r\n    area2.bottom = area3\r\n    area3.top = area2\r\n    area1.generateBlocks(blocksList)\r\n    area2.generateBlocks(blocksList2)\r\n    area3.generateBlocks(blocksList3)\r\n    game.areas.push(area1)\r\n    game.areas.push(area2)\r\n    game.areas.push(area3)\r\n    game.player.keyActionsRegister = keyEventHandler.getKeyActionsRegister()\r\n    game.assetManager = assetManager\r\n    game.audioManager.load('ambient', 'assets/audio/ambient/ambient.mp3', () => game.audioManager.playSound('ambient', true))\r\n\r\n    game.audioManager.load('jump', 'assets/audio/effects/jump.wav', () => {\r\n      gameObjects.push(map)\r\n      gameObjects.push(game.player)\r\n      gameObjects = gameObjects.concat(area1.blocks)\r\n      gameObjects = gameObjects.concat(area2.blocks)\r\n      gameObjects = gameObjects.concat(area3.blocks)\r\n\r\n      // Add all sprites to the download queue\r\n      assetManager.queueDownload('background', 'assets/textures/background.jpg')\r\n      assetManager.queueDownload('player', 'assets/textures/player.png')\r\n      assetManager.queueDownload('stone-block', 'assets/textures/stone-block.jpg')\r\n      assetManager.queueDownload('heart', 'assets/textures/heart.png')\r\n      // Start playing ambient music\r\n\r\n      // Download all sprites\r\n      assetManager.downLoadAll(function () {\r\n        // Assign the sprites to the correct material\r\n        gameObjects.forEach((obj) => obj.material.setSprite(assetManager.getAsset(obj.material.getName())))\r\n\r\n        // After the sprites are initialized start drawing\r\n        animate(ctx, game)\r\n      })\r\n    })\r\n  } else {\r\n    document.getElementById('unsupported').textContent = 'Please update your browser or download another one which supports HTML5'\r\n  }\r\n}\r\n\r\n$(document).ready(() => init())\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.js","/**\n * Created by Daniel on 2017-09-18.\n */\nexport default class Game {\n  /**\n   *\n   * @param {Canvas} canvas\n   * @param {AudioManager} audioManager\n   */\n  constructor (canvas, audioManager) {\n    this.audioManager = audioManager\n    this.canvas = canvas\n    this.player = null\n    this.running = false\n    this.areas = []\n    this.blocks = []\n  }\n\n  run () {\n    this.running = true\n  }\n\n  pause () {\n    this.running = false\n  }\n\n  update () {\n    this.player.move(this)\n    this.player.checkEdges(this)\n  }\n\n  render (ctx) {\n    this.canvas.render(ctx)\n    this.player.render(ctx)\n    this.current.blocks.forEach(block => block.render(ctx))\n    this.player.drawHearts(this, ctx)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/model/Game.js","/**\n * Created by Daniel on 2017-09-18.\n */\n\nexport default class CollisionBounds {\n  /**\n   *\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   */\n  constructor (x, y, width, height) {\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/model/CollisionBounds.js","import Entity from './Entity'\n\n/**\n * Created by Daniel on 2017-09-18.\n */\nexport default class Canvas extends Entity {\n  /**\n   *\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   * @param {Material} material\n   */\n  constructor (x, y, width, height, material) {\n    super(x, y, width, height, material)\n    this.name = 'default'\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/model/Canvas.js","import Material from './Material'\nimport Block from './Block'\nimport Player from './Player'\n\nexport default class Area {\n  constructor (game, top = null, bottom = null, left = null, right = null) {\n    this.game = game\n    this.top = top\n    this.bottom = bottom\n    this.left = left\n    this.right = right\n    this.blocks = []\n  }\n\n  generateBlocks (blocksList) {\n    let objWidth = this.game.canvas.width / blocksList[0].length\n    let objHeight = this.game.canvas.height / blocksList.length\n    let objX = 0\n    let objY = 0\n\n    for (let i = 0; i < blocksList.length; i++) {\n      for (let j = 0; j < blocksList[i].length; j++) {\n        if (blocksList[i][j] === 'block') {\n          this.blocks.push(new Block(objX, objY, objWidth, objHeight, new Material('stone-block')))\n        } else if (blocksList[i][j] === 'secret') {\n          let blk = new Block(objX, objY, objWidth, objHeight, new Material('stone-block'))\n          blk.solid = false\n          this.blocks.push(blk)\n        } else if (blocksList[i][j] === 'player' && this.game.player === null) {\n          this.game.player = new Player(objX, objY, objWidth, objHeight, new Material('player'))\n          this.game.current = this\n        }\n        objX += objWidth\n      }\n      objY += objHeight\n      objX = 0\n    }\n  }\n\n  hasLeft () {\n    return this.left !== null\n  }\n\n  hasRight () {\n    return this.right !== null\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/model/Area.js","export default class AudioManager {\n  constructor () {\n    this.bufferCache = []\n    try {\n      // Fix up for prefixing\n      window.AudioContext = window.AudioContext || window.webkitAudioContext\n      this.context = new AudioContext()\n    } catch (e) {\n      alert('Web Audio API is not supported in this browser')\n    }\n  }\n\n  load (name, url, callback) {\n    let instance = this\n    let request = new XMLHttpRequest()\n\n    request.open('GET', url, true)\n    request.responseType = 'arraybuffer'\n\n    // Decode asynchronously\n    request.onload = function () {\n      instance.context.decodeAudioData(\n        request.response, buffer => {\n          instance.bufferCache[name] = buffer\n          callback()\n        }, e => console.log('Failed to load file', e))\n    }\n    request.send()\n  }\n\n  playSound (name, loop = false) {\n    let sound = this.context.createBufferSource()\n\n    sound.buffer = this.bufferCache[name]\n    sound.connect(this.context.destination)\n    if (loop) {\n      sound.loop = loop\n      sound.loopEnd = Math.floor(sound.buffer.duration)\n    }\n    sound.start(0)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/AudioManager.js","export default class AssetManager {\n  constructor () {\n    this.downloadQueue = []\n    this.cache = {}\n    this.succesCount = 0\n    this.errorCount = 0\n  }\n\n  /**\n   *\n   * @param {string} name\n   * @param {string} path\n   */\n  queueDownload (name, path) {\n    this.downloadQueue.push({name: name, path: path})\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downLoadAll (callback) {\n    if (this.downloadQueue.length === 0) {\n      callback()\n    }\n\n    let managerInstance = this\n    this.downloadQueue.forEach(item => {\n      let img = new Image()\n      img.addEventListener('load', () => {\n        managerInstance.succesCount += 1\n\n        if (managerInstance.done()) {\n          callback()\n        }\n      }, false)\n      img.addEventListener('error', function () {\n        managerInstance.errorCount += 1\n\n        if (managerInstance.done()) {\n          callback()\n        }\n      }, false)\n      img.src = item.path\n      this.cache[item.name] = img\n    })\n  }\n\n  /**\n   *\n   * @param {string} name\n   */\n  getAsset (name) {\n    return this.cache[name]\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done () {\n    return this.downloadQueue.length === this.succesCount + this.errorCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/AssetManager.js","/**\n * Created by Daniel on 2017-09-18.\n */\nexport default class KeyboardEventHandler {\n  /**\n   *\n   * @param canvas\n   */\n  constructor (canvas) {\n    this.game = canvas\n    this.initializeKeyHandler()\n    this.keyActionsRegister = []\n  }\n\n  initializeKeyHandler () {\n    this.game.addEventListener('keydown', event => { this.keyActionsRegister[event.key] = true })\n    this.game.addEventListener('keyup', event => { this.keyActionsRegister[event.key] = false })\n  }\n\n  getKeyActionsRegister () {\n    return this.keyActionsRegister\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/KeyboardEventHandler.js"]}