{"version":3,"sources":["webpack:/webpack/bootstrap 2b1117ca503decc918c7","webpack:///src/client/app.js","webpack:///src/client/application/AssetManager.js","webpack:///src/client/graphics/2D/SpriteSheet.js","webpack:///src/client/application/InputManager.js","webpack:///src/client/graphics/2D/Animation.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","update","socket","emit","inputManager","registeredInputs","window","requestAnimationFrame","draw","players","playerId","spritesLoaded","currentPlayer","jumping","grounded","assetManager","playSound","currentAnimation","coinAnimation","ctx","clearRect","canvas","width","height","keys","forEach","key","player","viewport","areaId","animationLeft","animationRight","animationIdle","position","_x","_y","blocks","block","material","drawImage","getSprite","x","lives","font","fillStyle","fillText","coins","toString","io","document","getElementById","_InputManager2","default","_AssetManager2","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","addEventListener","getContext","queueDownload","frameWidth","frameHeight","loadAll","_Animation2","getSpriteSheet","textContent","on","engine","id","AssetManager","_classCallCheck","this","cache","audio","sprite","spriteSheet","bufferCache","queue","succesCount","errorCount","initAudioContext","AudioContext","webkitAudioContext","context","e","alert","path","type","opts","arguments","length","undefined","push","_this","item","loadAudio","loadSprite","loadSpriteSheet","_this2","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","done","onerror","send","_this3","img","Image","src","_SpriteSheet2","loop","sound","createBufferSource","connect","destination","loopEnd","Math","floor","duration","start","SpriteSheet","sourcePath","image","framesPerRow","InputManager","initializeKeyHandler","initializeTouchHandler","event","evt","preventDefault","xDown","touches","clientX","yDown","clientY","xUp","yUp","yDiff","handlerInstance","Animation","speed","end","offsetBottom","sequence","currentFrame","counter","frame","y","row","col"],"mappings":"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","file":"bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2b1117ca503decc918c7","'use strict'\r\n\r\nimport AssetManager from './application/AssetManager'\r\nimport InputManager from './application/InputManager'\r\nimport Animation from './graphics/2D/Animation'\r\n\r\nlet socket = io()\r\nlet canvas = document.getElementById('game')\r\nlet inputManager = new InputManager(canvas)\r\nlet assetManager = new AssetManager()\r\nlet playerId // player id is registered here on socket connection\r\nlet ctx // graphics context\r\nlet spritesLoaded = false // set to true when asset manager finishes to start drawing\r\nlet animationRight\r\nlet animationLeft\r\nlet animationIdle\r\nlet currentAnimation\r\nlet coinAnimation\r\n\r\n/**\r\n * Shim for animation loop.\r\n * Selects one that's available or uses fallback with setTimeout.\r\n */\r\nwindow.requestAnimFrame = (() => {\r\n  return window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    function (callback, element) {\r\n      window.setTimeout(callback, 1000 / 60)\r\n    }\r\n})()\r\n\r\n/**\r\n * Download all game assets.\r\n */\r\nfunction init () {\r\n  // check if canvas is supported by browser\r\n  if (canvas.getContext) {\r\n    socket.emit('new player')\r\n    ctx = canvas.getContext('2d')\r\n    // Add all sprites and music files to the download queue\r\n    assetManager.queueDownload('ambient', 'assets/audio/ambient/ambient.mp3', 'audio')\r\n    assetManager.queueDownload('jump', 'assets/audio/effects/jump.wav', 'audio')\r\n    assetManager.queueDownload('background', 'assets/textures/background.png', 'texture')\r\n    assetManager.queueDownload('player', 'assets/textures/player.png', 'texture')\r\n    assetManager.queueDownload('stone-block', 'assets/textures/stone-block.jpg', 'texture')\r\n    assetManager.queueDownload('heart', 'assets/textures/heart.png', 'texture')\r\n    assetManager.queueDownload('coin', 'assets/textures/coin.png', 'texture')\r\n    assetManager.queueDownload('playerSheet', 'assets/textures/test.png', 'spriteSheet', {\r\n      frameWidth: 32,\r\n      frameHeight: 64\r\n    })\r\n    assetManager.queueDownload('coinSheet', 'assets/textures/coin-sprite-animation-sprite-sheet.png', 'spriteSheet', {\r\n      frameWidth: 44, frameHeight: 44\r\n    })\r\n    assetManager.loadAll(() => {\r\n      animationRight = new Animation(assetManager.getSpriteSheet('playerSheet'), 3, 3, 6, 12)\r\n      animationLeft = new Animation(assetManager.getSpriteSheet('playerSheet'), 3, 3, 6, 12)\r\n      animationIdle = new Animation(assetManager.getSpriteSheet('playerSheet'), 10, 0, 2, 12)\r\n      coinAnimation = new Animation(assetManager.getSpriteSheet('coinSheet'), 3, 0, 9)\r\n      currentAnimation = animationLeft\r\n      // Play ambient sound\r\n      assetManager.playSound('ambient', true)\r\n      update()\r\n      // Draw Background only once to improve performance\r\n      document.getElementById('background').getContext('2d').drawImage(assetManager.getSprite('background'), 0, 0, canvas.width, canvas.height)\r\n      // tells socket.on(state) that all sprites needed for drawing are downloaded\r\n      spritesLoaded = true\r\n    })\r\n  } else {\r\n    document.getElementById('unsupported').textContent = 'Please update your browser or download another one which supports HTML5'\r\n  }\r\n}\r\n\r\n/**\r\n * Sends user input to the server.\r\n */\r\nfunction update () {\r\n  socket.emit('movement', inputManager.registeredInputs)\r\n  // Request new frame when ready. Allows the game to play in a loop in approximately 60fps\r\n  window.requestAnimationFrame(() => update())\r\n}\r\n\r\n/**\r\n * Draw all objects.\r\n * @param players player objects with objects within their viewport\r\n */\r\nfunction draw (players) {\r\n  if (playerId && players[playerId] && spritesLoaded) {\r\n    let currentPlayer = players[playerId]\r\n    if (inputManager.registeredInputs['w'] || inputManager.registeredInputs[' ']) {\r\n      // Check if players is not already jumping\r\n      if (!currentPlayer.jumping && currentPlayer.grounded) {\r\n        assetManager.playSound('jump')\r\n      }\r\n    }\r\n    currentAnimation.update()\r\n    coinAnimation.update()\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    Object.keys(players).forEach(key => {\r\n      const player = players[key]\r\n      // Make sure to only draw players in the same area\r\n      if (player.viewport.areaId === currentPlayer.viewport.areaId) {\r\n        if (player.registeredInputs['a']) {\r\n          currentAnimation = animationLeft\r\n        }\r\n        if (player.registeredInputs['d']) {\r\n          currentAnimation = animationRight\r\n        }\r\n        if (!player.registeredInputs['d'] && !player.registeredInputs['a']) {\r\n          currentAnimation = animationIdle\r\n        }\r\n        currentAnimation.draw(ctx, player.position._x, player.position._y, player.width, player.height)\r\n      }\r\n    })\r\n    // Draw all blocks\r\n    players[playerId].viewport.blocks.forEach(block => {\r\n      if (block.material.name === 'stone-block') {\r\n        ctx.drawImage(assetManager.getSprite(block.material.name), block.position._x, block.position._y, block.width, block.height)\r\n      } else if (block.material.name === 'coin') {\r\n        coinAnimation.draw(ctx, block.position._x, block.position._y, block.width, block.height)\r\n      }\r\n    })\r\n    // Display health\r\n    let x = canvas.width - 35\r\n    for (let i = 0; i < players[playerId].lives; i++) {\r\n      ctx.drawImage(assetManager.getSprite('heart'), x, 5, 30, 30)\r\n      x -= 30\r\n    }\r\n    ctx.drawImage(assetManager.getSprite('coin'), 5, 5, 30, 30)\r\n    ctx.font = '30px serif'\r\n    ctx.fillStyle = 'red'\r\n    ctx.fillText(players[playerId].coins.toString(), 45, 20)\r\n  }\r\n}\r\n\r\n/**\r\n * modern browser equivalent of jQuery $(document).ready()\r\n */\r\ndocument.addEventListener('DOMContentLoaded', init())\r\n\r\n/**\r\n * Initialize player id on socket connection\r\n */\r\nsocket.on('connect', () => {\r\n  // Tell server to add this player\r\n  socket.emit('new player')\r\n  // remember socket id to identify current player when drawing\r\n  playerId = socket.io.engine.id\r\n})\r\n\r\n/**\r\n * Listen to server sending objects to draw.\r\n * Contains the drawing loop\r\n */\r\nsocket.on('state', players => {\r\n  draw(players)\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.js","import SpriteSheet from './../graphics/2D/SpriteSheet'\n\n/**\n * Asset manager.\n *\n * @author Daniel Peters\n * @version 2.0\n */\nexport default class AssetManager {\n  constructor () {\n    this.cache = {\n      audio: [],\n      sprite: [],\n      spriteSheet: []\n    }\n    this.bufferCache = []\n    this.queue = []\n    this.succesCount = 0\n    this.errorCount = 0\n    this.initAudioContext()\n  }\n\n  initAudioContext () {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || window.webkitAudioContext\n      this.context = new AudioContext()\n    } catch (e) {\n      alert('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   * Queue an audio file for download.\n   *\n   * @param {string} name name of the audio file\n   * @param {string} path location of the audio file\n   * @param {string} type of file\n   * @param {{}} opts additional options\n   */\n  queueDownload (name, path, type, opts = {}) {\n    this.queue.push({name: name, path: path, type: type, opts: opts})\n  }\n\n  /**\n   * Download all files and execute callback function when done.\n   *\n   * @param callback function to be executed when downloading is done\n   */\n  loadAll (callback) {\n    if (this.queue.length === 0) {\n      callback()\n    }\n    this.queue.forEach(item => {\n      if (item.type === 'audio') {\n        this.loadAudio(item, callback)\n      } else if (item.type === 'texture') {\n        this.loadSprite(item, callback)\n      } else if (item.type === 'spriteSheet') {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param {{}} item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback) {\n    let request = new XMLHttpRequest()\n\n    request.open('GET', item.path, true)\n    request.responseType = 'arraybuffer'\n\n    // Decode asynchronously\n    request.onload = () => {\n      this.context.decodeAudioData(\n        request.response, buffer => {\n          this.cache.audio[item.name] = buffer\n          this.succesCount += 1\n          if (this.done()) {\n            callback()\n          }\n        }\n      )\n    }\n\n    // Register error\n    request.onerror = () => {\n      this.errorCount += 1\n      if (this.done()) {\n        callback()\n      }\n    }\n    request.send()\n  }\n\n  /**\n   * Load simple sprites as image.\n   *\n   * @param item sprite info\n   * @param callback called upon downloading all\n   */\n  loadSprite (item, callback) {\n    let img = new Image()\n    img.addEventListener('load', () => {\n      this.succesCount += 1\n\n      if (this.done()) {\n        callback()\n      }\n    }, false)\n    img.addEventListener('error', () => {\n      this.errorCount += 1\n\n      if (this.done()) {\n        callback()\n      }\n    }, false)\n    img.src = item.path\n    this.cache.sprite[item.name] = img\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback) {\n    this.cache.spriteSheet[item.name] = new SpriteSheet(item.path, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n    this.succesCount += 1\n    if (this.done()) {\n      callback()\n    }\n  }\n\n  /**\n   * Get sprite by name.\n   *\n   * @param {string} name sprite name\n   */\n  getSprite (name) {\n    return this.cache.sprite[name]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {string} name sprite sheet name\n   */\n  getSpriteSheet (name) {\n    return this.cache.spriteSheet[name]\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param name filename\n   * @param loop set to true for looped sounds like ambient music\n   */\n  playSound (name, loop = false) {\n    let sound = this.context.createBufferSource()\n\n    sound.buffer = this.cache.audio[name]\n    sound.connect(this.context.destination)\n    if (loop) {\n      sound.loop = loop\n      sound.loopEnd = Math.floor(sound.buffer.duration)\n    }\n    sound.start(0)\n  }\n\n  /**\n   * Check if downloading is finished.\n   * @returns {boolean}\n   */\n  done () {\n    return this.queue.length === this.succesCount + this.errorCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/AssetManager.js","/**\n * Sprite sheet definition.\n */\nexport default class SpriteSheet {\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   * @param sourcePath\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (sourcePath, frameWidth, frameHeight) {\n    this.image = new Image()\n    this.frameWidth = frameWidth\n    this.frameHeight = frameHeight\n\n    this.image.addEventListener('load', () => {\n      this.framesPerRow = Math.floor(this.image.width / this.frameWidth)\n    })\n\n    this.image.src = sourcePath\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/SpriteSheet.js","/**\n * Input manager.\n *\n * @author Daniel Peters\n * @version 2.0\n */\nexport default class InputManager {\n  constructor () {\n    this.initializeKeyHandler()\n    this.initializeTouchHandler()\n\n    // All keystrokes and touch swipes are registered here\n    // This object is then sent to the server to process player movement\n    this.registeredInputs = {}\n  }\n\n  /**\n   * Handle keyboard key presses.\n   * Only booleans are set to express the movement direction intention\n   * This allows the separation of keystrokes from actual movement.\n   */\n  initializeKeyHandler () {\n    window.addEventListener('keydown', event => { this.registeredInputs[event.key] = true }, false)\n    window.addEventListener('keyup', event => { this.registeredInputs[event.key] = false }, false)\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler () {\n    // Register the event listeners\n    window.addEventListener('touchstart', handleTouchStart, false)\n    window.addEventListener('touchmove', handleTouchMove, false)\n    window.addEventListener('touchend', handleTouchEnd, false)\n\n    let xDown = null\n    let yDown = null\n    let handlerInstance = this\n\n    function handleTouchStart (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      xDown = evt.touches[0].clientX\n      yDown = evt.touches[0].clientY\n    }\n\n    function handleTouchMove (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      // do nothing if no touch direction is registered\n      if (!xDown || !yDown) {\n        return\n      }\n\n      let xUp = evt.touches[0].clientX\n      let yUp = evt.touches[0].clientY\n\n      // Subtract start currently touched location from start location\n      let xDiff = xDown - xUp\n      let yDiff = yDown - yUp\n\n      // Positive values equals left. Negative values equals right\n      if (xDiff > 0) {\n        handlerInstance.registeredInputs['a'] = true\n      } else {\n        handlerInstance.registeredInputs['d'] = true\n      }\n\n      // Positive = up. Negative = down\n      if (yDiff > 0) {\n        handlerInstance.registeredInputs['w'] = true\n      } else {\n        /* down swipe */\n      }\n      /* reset values */\n      xDown = null\n      yDown = null\n    }\n\n    function handleTouchEnd (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      Object.keys(handlerInstance.registeredInputs).forEach(key => { handlerInstance.registeredInputs[key] = false })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/InputManager.js","/**\n * Implements sprite animation using sprite sheet.\n *\n * @author Daniel Peters\n * @version 0.3\n */\nexport default class Animation {\n  /**\n   * Constructor Sets all animation data.\n   *\n   * @param {SpriteSheet} spriteSheet corresponding sprite sheet\n   * @param {number} speed animation speed\n   * @param {number} start animation start frame\n   * @param {number} end animation end frame\n   * @param {number} offsetBottom drawing offset at the bottom of source image\n   */\n  constructor (spriteSheet, speed, start, end, offsetBottom = 0) {\n    this.spriteSheet = spriteSheet\n    this.speed = speed\n    this.sequence = []\n    this.currentFrame = 0\n    this.counter = 0\n    this.offsetBottom = offsetBottom\n\n    for (let frame = start; frame <= end; frame++) {\n      this.sequence.push(frame)\n    }\n  }\n\n  /**\n   * Update animation frames.\n   */\n  update () {\n    if (this.counter === (this.speed - 1)) {\n      this.currentFrame = (this.currentFrame + 1) % this.sequence.length\n    }\n    this.counter = (this.counter + 1) % this.speed\n  }\n\n  /**\n   * Draw current frame\n   * @param ctx canvas context\n   * @param x location x\n   * @param y location y\n   * @param width display width\n   * @param height display height\n   */\n  draw (ctx, x, y, width, height) {\n    let row = Math.floor(this.sequence[this.currentFrame] / this.spriteSheet.framesPerRow)\n    let col = Math.floor(this.sequence[this.currentFrame] % this.spriteSheet.framesPerRow)\n    ctx.drawImage(\n      this.spriteSheet.image,\n      col * this.spriteSheet.frameWidth,\n      row * this.spriteSheet.frameHeight,\n      this.spriteSheet.frameWidth,\n      this.spriteSheet.frameHeight - this.offsetBottom,\n      x,\n      y,\n      width,\n      height\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/Animation.js"]}