{"version":3,"sources":["webpack:/webpack/bootstrap 67127014a37e7b57f84e","webpack:///src/client/app.js","webpack:///src/client/application/AudioManager.js","webpack:///src/client/application/AssetManager.js","webpack:///src/client/application/KeyboardEventHandler.js","webpack:///src/client/graphics/2D/SpriteSheet.js","webpack:///src/client/graphics/2D/Animation.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","update","socket","emit","keyEventHandler","keyActionsRegister","window","requestAnimationFrame","draw","players","playerId","spritesLoaded","currentAnimation","ctx","clearRect","canvas","width","height","keys","forEach","key","player","viewport","areaId","animationLeft","animationRight","position","_x","_y","blocks","block","drawImage","assetManager","getAsset","material","x","lives","jumping","io","document","getElementById","_KeyboardEventHandler2","default","audioManager","_AudioManager2","_AssetManager2","spriteSheet","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","addEventListener","getContext","queueDownload","_SpriteSheet2","_Animation2","loadAll","playSound","textContent","on","engine","id","AudioManager","_classCallCheck","this","bufferCache","downloadQueue","succesCount","errorCount","AudioContext","webkitAudioContext","context","e","alert","path","push","length","managerInstance","item","load","instance","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","done","onerror","send","loop","arguments","undefined","sound","createBufferSource","connect","destination","loopEnd","Math","floor","duration","start","AssetManager","cache","_this","img","Image","src","KeyboardEventHandler","initializeKeyHandler","initializeTouchHandler","event","evt","preventDefault","xDown","touches","clientX","yDown","clientY","xUp","yUp","yDiff","handlerInstance","SpriteSheet","sourcePath","frameWidth","frameHeight","image","framesPerRow","Animation","speed","end","sequence","currentFrame","counter","frame","y","row","col"],"mappings":"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","file":"bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 67127014a37e7b57f84e","'use strict'\r\n\r\nimport AudioManager from './application/AudioManager'\r\nimport AssetManager from './application/AssetManager'\r\nimport KeyboardEventHandler from './application/KeyboardEventHandler'\r\nimport SpriteSheet from './graphics/2D/SpriteSheet'\r\nimport Animation from './graphics/2D/Animation'\r\n\r\nlet socket = io()\r\nlet canvas = document.getElementById('game')\r\nlet keyEventHandler = new KeyboardEventHandler(canvas)\r\nlet audioManager = new AudioManager() // TODO Combine audio manager with asset manager to avoid duplicate code\r\nlet assetManager = new AssetManager()\r\nlet playerId // player id is registered here on socket connection\r\nlet ctx // graphics context\r\nlet spritesLoaded = false // set to true when asset manager finishes to start drawing\r\nlet spriteSheet\r\nlet animationRight\r\nlet animationLeft\r\nlet currentAnimation\r\n\r\n/**\r\n * Shim for animation loop.\r\n * Selects one that's available or uses fallback with setTimeout.\r\n */\r\nwindow.requestAnimFrame = (() => {\r\n  return window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    function (callback, element) {\r\n      window.setTimeout(callback, 1000 / 60)\r\n    }\r\n})()\r\n\r\n/**\r\n * Download all game assets.\r\n */\r\nfunction init () {\r\n  // check if canvas is supported by browser\r\n  if (canvas.getContext) {\r\n    socket.emit('new player')\r\n    ctx = canvas.getContext('2d')\r\n    // Add all sprites and music files to the download queue\r\n    audioManager.queueDownload('ambient', 'assets/audio/ambient/ambient.mp3')\r\n    audioManager.queueDownload('jump', 'assets/audio/effects/jump.wav')\r\n    assetManager.queueDownload('background', 'assets/textures/background.png')\r\n    assetManager.queueDownload('player', 'assets/textures/player.png')\r\n    assetManager.queueDownload('stone-block', 'assets/textures/stone-block.jpg')\r\n    assetManager.queueDownload('heart', 'assets/textures/heart.png')\r\n    spriteSheet = new SpriteSheet('assets/textures/character.png', 108, 140)\r\n    animationRight = new Animation(spriteSheet, 3, 0, 7)\r\n    animationLeft = new Animation(spriteSheet, 3, 8, 14)\r\n    currentAnimation = animationLeft\r\n    audioManager.loadAll(() => {\r\n      // Download all sprites\r\n      assetManager.loadAll(() => {\r\n        // Play ambient sound\r\n        audioManager.playSound('ambient', true)\r\n        update()\r\n        // Draw Background only once to improve performance\r\n        document.getElementById('background').getContext('2d').drawImage(assetManager.getAsset('background'), 0, 0, canvas.width, canvas.height)\r\n        // tells socket.on(state) that all sprites needed for drawing are downloaded\r\n        spritesLoaded = true\r\n      })\r\n    })\r\n  } else {\r\n    document.getElementById('unsupported').textContent = 'Please update your browser or download another one which supports HTML5'\r\n  }\r\n}\r\n\r\n/**\r\n * Sends user input to the server.\r\n */\r\nfunction update () {\r\n  socket.emit('movement', keyEventHandler.keyActionsRegister)\r\n  // Request new frame when ready. Allows the game to play in a loop in approximately 60fps\r\n  window.requestAnimationFrame(() => update())\r\n}\r\n\r\nfunction draw (players) {\r\n  if (playerId && players[playerId] && spritesLoaded) {\r\n    currentAnimation.update()\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    Object.keys(players).forEach(key => {\r\n      const player = players[key]\r\n      // Make sure to only draw players in the same area\r\n      if (player.viewport.areaId === players[playerId].viewport.areaId) {\r\n        if (player.keyActionsRegister['a']) {\r\n          currentAnimation = animationLeft\r\n        }\r\n        if (player.keyActionsRegister['d']) {\r\n          currentAnimation = animationRight\r\n        }\r\n        currentAnimation.draw(ctx, player.position._x, player.position._y, player.width, player.height)\r\n      }\r\n    })\r\n    // Draw all blocks\r\n    players[playerId].viewport.blocks.forEach(block => {\r\n      ctx.drawImage(assetManager.getAsset(block.material.name), block.position._x, block.position._y, block.width, block.height)\r\n    })\r\n    // Display health\r\n    let x = canvas.width - 35\r\n    let y = 5\r\n    for (let i = 0; i < players[playerId].lives; i++) {\r\n      ctx.drawImage(assetManager.getAsset('heart'), x, y, 30, 30)\r\n      x -= 30\r\n    }\r\n    if (players[playerId].jumping) {\r\n      // audioManager.playSound('jump') TODO Currently fires multiple times. Find a way to only play when the last jump sound ended\r\n    }\r\n\r\n    // animation.draw(ctx, 12.5, 12.5, 50, 50)\r\n  }\r\n}\r\n\r\n/**\r\n * modern browser equivalent of jQuery $(document).ready()\r\n */\r\ndocument.addEventListener('DOMContentLoaded', init())\r\n\r\n/**\r\n * Initialize player id on socket connection\r\n */\r\nsocket.on('connect', () => {\r\n  // Tell server to add this player\r\n  socket.emit('new player')\r\n  // remember socket id to identify current player when drawing\r\n  playerId = socket.io.engine.id\r\n})\r\n\r\n/**\r\n * Listen to server sending objects to draw.\r\n * Contains the drawing loop\r\n */\r\nsocket.on('state', players => {\r\n  draw(players)\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.js","/**\r\n * Audio asset manager.\r\n * TODO: Merge with AssetManager to eliminate duplicate code.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.1\r\n */\r\nexport default class AudioManager {\r\n  constructor () {\r\n    this.bufferCache = []\r\n    this.downloadQueue = []\r\n    this.succesCount = 0\r\n    this.errorCount = 0\r\n\r\n    try {\r\n      // Fix for browsers using prefixes\r\n      window.AudioContext = window.AudioContext || window.webkitAudioContext\r\n      this.context = new AudioContext()\r\n    } catch (e) {\r\n      alert('Web Audio API is not supported in this browser')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Queue an audio file for download.\r\n   *\r\n   * @param {string} name name of the audio file\r\n   * @param {string} path location of the audio file\r\n   */\r\n  queueDownload (name, path) {\r\n    this.downloadQueue.push({name: name, path: path})\r\n  }\r\n\r\n  /**\r\n   * Download all files and execute callback function when done.\r\n   *\r\n   * @param callback function to be executed when downloading is done\r\n   */\r\n  loadAll (callback) {\r\n    if (this.downloadQueue.length === 0) {\r\n      callback()\r\n    }\r\n    let managerInstance = this\r\n    this.downloadQueue.forEach(item => {\r\n      managerInstance.load(item.name, item.path, callback)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Build an AJAX Request to load audio file into the buffer cache.\r\n   *\r\n   * @param name file name\r\n   * @param path location of the file\r\n   * @param callback function to execute on done\r\n   */\r\n  load (name, path, callback) {\r\n    let instance = this\r\n    let request = new XMLHttpRequest()\r\n\r\n    request.open('GET', path, true)\r\n    request.responseType = 'arraybuffer'\r\n\r\n    // Decode asynchronously\r\n    request.onload = function () {\r\n      instance.context.decodeAudioData(\r\n        request.response, buffer => {\r\n          instance.bufferCache[name] = buffer\r\n          instance.succesCount += 1\r\n\r\n          if (instance.done()) {\r\n            callback()\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    // Register error\r\n    request.onerror = function () {\r\n      instance.errorCount += 1\r\n\r\n      if (instance.done()) {\r\n        callback()\r\n      }\r\n    }\r\n    request.send()\r\n  }\r\n\r\n  /**\r\n   * Create an audio buffer source node from cached buffer.\r\n   * Send it to the destination of the audio context and play it.\r\n   *\r\n   * @param name filename\r\n   * @param loop set to true for looped sounds like ambient music\r\n   */\r\n  playSound (name, loop = false) {\r\n    let sound = this.context.createBufferSource()\r\n\r\n    sound.buffer = this.bufferCache[name]\r\n    sound.connect(this.context.destination)\r\n    if (loop) {\r\n      sound.loop = loop\r\n      sound.loopEnd = Math.floor(sound.buffer.duration)\r\n    }\r\n    sound.start(0)\r\n  }\r\n\r\n  /**\r\n   * Check if downloading is finished.\r\n   * @returns {boolean}\r\n   */\r\n  done () {\r\n    return this.downloadQueue.length === this.succesCount + this.errorCount\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/AudioManager.js","/**\r\n * Texture asset manager.\r\n * TODO: Merge with AudioManager to eliminate duplicate code.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.1\r\n */\r\nexport default class AssetManager {\r\n  constructor () {\r\n    this.downloadQueue = []\r\n    this.cache = {}\r\n    this.succesCount = 0\r\n    this.errorCount = 0\r\n  }\r\n\r\n  /**\r\n   * Queue an image to download.\r\n   *\r\n   * @param {string} name name of file\r\n   * @param {string} path location of file\r\n   */\r\n  queueDownload (name, path) {\r\n    this.downloadQueue.push({name: name, path: path})\r\n  }\r\n\r\n  /**\r\n   * Download all queued items and execute the callback function ond finish.\r\n   *\r\n   * @param callback function go be executed on download end\r\n   */\r\n  loadAll (callback) {\r\n    if (this.downloadQueue.length === 0) {\r\n      callback()\r\n    }\r\n\r\n    let managerInstance = this\r\n    this.downloadQueue.forEach(item => {\r\n      let img = new Image()\r\n      img.addEventListener('load', () => {\r\n        managerInstance.succesCount += 1\r\n\r\n        if (managerInstance.done()) {\r\n          callback()\r\n        }\r\n      }, false)\r\n      img.addEventListener('error', function () {\r\n        managerInstance.errorCount += 1\r\n\r\n        if (managerInstance.done()) {\r\n          callback()\r\n        }\r\n      }, false)\r\n      img.src = item.path\r\n      this.cache[item.name] = img\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Get asset by name.\r\n   *\r\n   * @param {string} name asset name\r\n   */\r\n  getAsset (name) {\r\n    return this.cache[name]\r\n  }\r\n\r\n  /**\r\n   * Check if downloading is done.\r\n   *\r\n   * @returns {boolean} true when downloading done\r\n   */\r\n  done () {\r\n    return this.downloadQueue.length === this.succesCount + this.errorCount\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/AssetManager.js","/**\r\n * Input manager.\r\n *\r\n * @author Daniel Peters\r\n * @version 2.0\r\n */\r\nexport default class KeyboardEventHandler {\r\n  constructor () {\r\n    this.initializeKeyHandler()\r\n    this.initializeTouchHandler()\r\n\r\n    // All keystrokes and touch swipes are registered here\r\n    // This object is then sent to the server to process player movement\r\n    this.keyActionsRegister = {}\r\n  }\r\n\r\n  /**\r\n   * Handle keyboard key presses.\r\n   * Only booleans are set to express the movement direction intention\r\n   * This allows the separation of keystrokes from actual movement.\r\n   */\r\n  initializeKeyHandler () {\r\n    window.addEventListener('keydown', event => { this.keyActionsRegister[event.key] = true }, false)\r\n    window.addEventListener('keyup', event => { this.keyActionsRegister[event.key] = false }, false)\r\n  }\r\n\r\n  /**\r\n   * Maps swipe directions to key press booleans.\r\n   * Allows touch controls on mobile.\r\n   */\r\n  initializeTouchHandler () {\r\n    // Register the event listeners\r\n    window.addEventListener('touchstart', handleTouchStart, false)\r\n    window.addEventListener('touchmove', handleTouchMove, false)\r\n    window.addEventListener('touchend', handleTouchEnd, false)\r\n\r\n    let xDown = null\r\n    let yDown = null\r\n    let handlerInstance = this\r\n\r\n    function handleTouchStart (evt) {\r\n      // Prevent divide scrolling\r\n      evt.preventDefault()\r\n      xDown = evt.touches[0].clientX\r\n      yDown = evt.touches[0].clientY\r\n    }\r\n\r\n    function handleTouchMove (evt) {\r\n      // Prevent divide scrolling\r\n      evt.preventDefault()\r\n      // do nothing if no touch direction is registered\r\n      if (!xDown || !yDown) {\r\n        return\r\n      }\r\n\r\n      let xUp = evt.touches[0].clientX\r\n      let yUp = evt.touches[0].clientY\r\n\r\n      // Subtract start currently touched location from start location\r\n      let xDiff = xDown - xUp\r\n      let yDiff = yDown - yUp\r\n\r\n      // Positive values equals left. Negative values equals right\r\n      if (xDiff > 0) {\r\n        handlerInstance.keyActionsRegister['a'] = true\r\n      } else {\r\n        handlerInstance.keyActionsRegister['d'] = true\r\n      }\r\n\r\n      // Positive = up. Negative = down\r\n      if (yDiff > 0) {\r\n        handlerInstance.keyActionsRegister['w'] = true\r\n      } else {\r\n        /* down swipe */\r\n      }\r\n      /* reset values */\r\n      xDown = null\r\n      yDown = null\r\n    }\r\n\r\n    function handleTouchEnd (evt) {\r\n      // Prevent divide scrolling\r\n      evt.preventDefault()\r\n      Object.keys(handlerInstance.keyActionsRegister).forEach(key => { handlerInstance.keyActionsRegister[key] = false })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get registered keyboard input and touch swipes\r\n   * @returns {*}\r\n   */\r\n  getKeyActionsRegister () {\r\n    return this.keyActionsRegister\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/KeyboardEventHandler.js","/**\r\n * Sprite sheet definition.\r\n * TODO: Finish implementation\r\n */\r\nexport default class SpriteSheet {\r\n  /**\r\n   * Constructor. Sets frame dimensions and calculates number of frames.\r\n   * @param sourcePath\r\n   * @param frameWidth\r\n   * @param frameHeight\r\n   */\r\n  constructor (sourcePath, frameWidth, frameHeight) {\r\n    this.image = new Image()\r\n    this.frameWidth = frameWidth\r\n    this.frameHeight = frameHeight\r\n\r\n    this.image.addEventListener('load', () => {\r\n      this.framesPerRow = Math.floor(this.image.width / this.frameWidth)\r\n    })\r\n\r\n    this.image.src = sourcePath\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/SpriteSheet.js","/**\r\n * Implements sprite animation using spritesheet.\r\n * TODO: Finish code\r\n *\r\n * @author Daniel Peters\r\n * @version 0.3\r\n */\r\nexport default class Animation {\r\n  /**\r\n   * Constructor Sets all animation data.\r\n   *\r\n   * @param spriteSheet corresponding sprite sheet\r\n   * @param speed animation speed\r\n   * @param start animation start frame\r\n   * @param end animation end frame\r\n   */\r\n  constructor (spriteSheet, speed, start, end) {\r\n    this.spriteSheet = spriteSheet\r\n    this.speed = speed\r\n    this.sequence = []\r\n    this.currentFrame = 0\r\n    this.counter = 0\r\n\r\n    for (let frame = start; frame <= end; frame++) {\r\n      this.sequence.push(frame)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update animation frames.\r\n   */\r\n  update () {\r\n    if (this.counter === (this.speed - 1)) {\r\n      this.currentFrame = (this.currentFrame + 1) % this.sequence.length\r\n    }\r\n    this.counter = (this.counter + 1) % this.speed\r\n  }\r\n\r\n  /**\r\n   * Draw current frame\r\n   * @param ctx canvas context\r\n   * @param x location x\r\n   * @param y location y\r\n   * @param width display width\r\n   * @param height display height\r\n   */\r\n  draw (ctx, x, y, width, height) {\r\n    let row = Math.floor(this.sequence[this.currentFrame] / this.spriteSheet.framesPerRow)\r\n    let col = Math.floor(this.sequence[this.currentFrame] % this.spriteSheet.framesPerRow)\r\n    ctx.drawImage(\r\n      this.spriteSheet.image,\r\n      col * this.spriteSheet.frameWidth,\r\n      row * this.spriteSheet.frameHeight,\r\n      this.spriteSheet.frameWidth,\r\n      this.spriteSheet.frameHeight,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/Animation.js"]}