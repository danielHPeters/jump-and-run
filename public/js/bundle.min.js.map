{"version":3,"sources":["webpack:/webpack/bootstrap c58a24cd141611aa9a5b","webpack:///src/client/app.js","webpack:///src/client/application/AudioManager.js","webpack:///src/client/application/AssetManager.js","webpack:///src/client/application/KeyboardEventHandler.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","update","socket","emit","keyEventHandler","keyActionsRegister","window","requestAnimationFrame","io","canvas","document","getElementById","_KeyboardEventHandler2","default","audioManager","_AudioManager2","assetManager","_AssetManager2","playerId","ctx","spritesLoaded","on","players","console","log","clearRect","width","height","keys","forEach","key","player","viewport","areaId","drawImage","getAsset","material","position","_x","_y","blocks","block","x","lives","jumping","engine","id","addEventListener","getContext","queueDownload","loadAll","playSound","downLoadAll","textContent","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","AudioManager","_classCallCheck","this","bufferCache","downloadQueue","succesCount","errorCount","AudioContext","webkitAudioContext","context","e","alert","path","push","length","managerInstance","item","load","instance","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","done","onerror","send","loop","arguments","undefined","sound","createBufferSource","connect","destination","loopEnd","Math","floor","duration","start","AssetManager","cache","_this","img","Image","src","KeyboardEventHandler","initializeKeyHandler","initializeTouchHandler","event","evt","preventDefault","xDown","touches","clientX","yDown","clientY","xUp","yUp","yDiff","handlerInstance"],"mappings":"aAIA,SAAAA,EAAAC,GAGA,GAAAC,EAAAD,GACA,OAAAC,EAAAD,GAAAE,QAGA,IAAAC,EAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,YAUA,OANAI,EAAAN,GAAAO,KAAAJ,EAAAD,QAAAC,EAAAA,EAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,IAAAD,KA4BAF,EAAAS,EAAAF,EAGAP,EAAAU,EAAAR,EAGAF,EAAAW,EAAA,SAAAR,EAAAS,EAAAC,GACAb,EAAAc,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAb,EAAAoB,EAAA,SAAAhB,GACA,IAAAS,EAAAT,GAAAA,EAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAJ,EAAAW,EAAAE,EAAA,IAAAA,GACAA,GAIAb,EAAAc,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDvB,EAAA0B,EAAA,GAGA1B,EAAAA,EAAA2B,EAAA,qFC3CA,SAASC,IACPC,EAAOC,KAAK,WAAYC,EAAgBC,oBAExCC,OAAOC,sBAAsB,WAAA,OAAMN,MAnBrC,QAAA5B,EAAA,QACAA,EAAA,QACAA,EAAA,IAEI6B,EAASM,KACTC,EAASC,SAASC,eAAe,QACjCP,EAAkB,IAAAQ,EAAAC,QAAyBJ,GAC3CK,EAAe,IAAAC,EAAAF,QACfG,EAAe,IAAAC,EAAAJ,QACfK,OAAAA,EACAC,OAAAA,EACAC,GAAgB,EAepBlB,EAAOmB,GAAG,QAAS,SAAAC,GACjB,GAAIJ,GAAYI,EAAQJ,IAAaE,EAAe,CAClDG,QAAQC,IAAIF,EAAQJ,IACpBC,EAAIM,UAAU,EAAG,EAAGhB,EAAOiB,MAAOjB,EAAOkB,QACzCvC,OAAOwC,KAAKN,GAASO,QAAQ,SAAAC,GAC3B,IAAMC,EAAST,EAAQQ,GAEnBC,EAAOC,SAASC,SAAWX,EAAQJ,GAAUc,SAASC,QACxDd,EAAIe,UAAUlB,EAAamB,SAASJ,EAAOK,SAASnD,MAAO8C,EAAOM,SAASC,GAAIP,EAAOM,SAASE,GAAIR,EAAOL,MAAOK,EAAOJ,UAI5HL,EAAQJ,GAAUc,SAASQ,OAAOX,QAAQ,SAAAY,GACxCtB,EAAIe,UAAUlB,EAAamB,SAASM,EAAML,SAASnD,MAAOwD,EAAMJ,SAASC,GAAIG,EAAMJ,SAASE,GAAIE,EAAMf,MAAOe,EAAMd,UAKrH,IAAK,IAFDe,EAAIjC,EAAOiB,MAAQ,GAEdhD,EAAI,EAAGA,EAAI4C,EAAQJ,GAAUyB,MAAOjE,IAC3CyC,EAAIe,UAAUlB,EAAamB,SAAS,SAAUO,EAFxC,EAE8C,GAAI,IACxDA,GAAK,GAEHpB,EAAQJ,GAAU0B,WAqC1B1C,EAAOmB,GAAG,UAAW,WAEnBnB,EAAOC,KAAK,cAEZe,EAAWhB,EAAOM,GAAGqC,OAAOC,KAM9BpC,SAASqC,iBAAiB,wBApCpBtC,EAAOuC,YACT9C,EAAOC,KAAK,cACZgB,EAAMV,EAAOuC,WAAW,MAExBlC,EAAamC,cAAc,UAAW,oCACtCnC,EAAamC,cAAc,OAAQ,iCACnCjC,EAAaiC,cAAc,aAAc,kCACzCjC,EAAaiC,cAAc,SAAU,8BACrCjC,EAAaiC,cAAc,cAAe,mCAC1CjC,EAAaiC,cAAc,QAAS,6BACpCnC,EAAaoC,QAAQ,WACnBpC,EAAaqC,UAAU,WAAW,GAElCnC,EAAaoC,YAAY,WACvBnD,IAEAS,SAASC,eAAe,cAAcqC,WAAW,MAAMd,UAAUlB,EAAamB,SAAS,cAAe,EAAG,EAAG1B,EAAOiB,MAAOjB,EAAOkB,QAEjIP,GAAgB,OAIpBV,SAASC,eAAe,eAAe0C,YAAc,4EAoBzD/C,OAAOgD,iBACEhD,OAAOC,uBACZD,OAAOiD,6BACPjD,OAAOkD,0BACPlD,OAAOmD,wBACPnD,OAAOoD,yBACP,SAAUC,EAAUC,GAClBtD,OAAOuD,WAAWF,EAAU,IAAO,2aCvGpBG,aACnB,SAAAA,IAAeC,EAAAC,KAAAF,GACbE,KAAKC,eACLD,KAAKE,iBACLF,KAAKG,YAAc,EACnBH,KAAKI,WAAa,EAElB,IAEE9D,OAAO+D,aAAe/D,OAAO+D,cAAgB/D,OAAOgE,mBACpDN,KAAKO,QAAU,IAAIF,aACnB,MAAOG,GACPC,MAAM,mGAUKxF,EAAMyF,GACnBV,KAAKE,cAAcS,MAAM1F,KAAMA,EAAMyF,KAAMA,oCAQpCf,GAC2B,IAA9BK,KAAKE,cAAcU,QACrBjB,IAEF,IAAIkB,EAAkBb,KACtBA,KAAKE,cAAcrC,QAAQ,SAAAiD,GACzBD,EAAgBE,KAAKD,EAAK7F,KAAM6F,EAAKJ,KAAMf,kCAWzC1E,EAAMyF,EAAMf,GAChB,IAAIqB,EAAWhB,KACXiB,EAAU,IAAIC,eAElBD,EAAQE,KAAK,MAAOT,GAAM,GAC1BO,EAAQG,aAAe,cAGvBH,EAAQI,OAAS,WACfL,EAAST,QAAQe,gBACfL,EAAQM,SAAU,SAAAC,GAChBR,EAASf,YAAYhF,GAAQuG,EAC7BR,EAASb,aAAe,EAEpBa,EAASS,QACX9B,OAORsB,EAAQS,QAAU,WAChBV,EAASZ,YAAc,EAEnBY,EAASS,QACX9B,KAGJsB,EAAQU,yCAUC1G,GAAoB,IAAd2G,EAAcC,UAAAjB,OAAA,QAAAkB,IAAAD,UAAA,IAAAA,UAAA,GACzBE,EAAQ/B,KAAKO,QAAQyB,qBAEzBD,EAAMP,OAASxB,KAAKC,YAAYhF,GAChC8G,EAAME,QAAQjC,KAAKO,QAAQ2B,aACvBN,IACFG,EAAMH,KAAOA,EACbG,EAAMI,QAAUC,KAAKC,MAAMN,EAAMP,OAAOc,WAE1CP,EAAMQ,MAAM,kCAQZ,OAAOvC,KAAKE,cAAcU,SAAWZ,KAAKG,YAAcH,KAAKI,8BAxG5CN,waCAA0C,aACnB,SAAAA,IAAezC,EAAAC,KAAAwC,GACbxC,KAAKE,iBACLF,KAAKyC,SACLzC,KAAKG,YAAc,EACnBH,KAAKI,WAAa,kDASLnF,EAAMyF,GACnBV,KAAKE,cAAcS,MAAM1F,KAAMA,EAAMyF,KAAMA,wCAQhCf,GAAU,IAAA+C,EAAA1C,KACa,IAA9BA,KAAKE,cAAcU,QACrBjB,IAGF,IAAIkB,EAAkBb,KACtBA,KAAKE,cAAcrC,QAAQ,SAAAiD,GACzB,IAAI6B,EAAM,IAAIC,MACdD,EAAI5D,iBAAiB,OAAQ,WAC3B8B,EAAgBV,aAAe,EAE3BU,EAAgBY,QAClB9B,MAED,GACHgD,EAAI5D,iBAAiB,QAAS,WAC5B8B,EAAgBT,YAAc,EAE1BS,EAAgBY,QAClB9B,MAED,GACHgD,EAAIE,IAAM/B,EAAKJ,KACfgC,EAAKD,MAAM3B,EAAK7F,MAAQ0H,qCASlB1H,GACR,OAAO+E,KAAKyC,MAAMxH,kCASlB,OAAO+E,KAAKE,cAAcU,SAAWZ,KAAKG,YAAcH,KAAKI,8BAjE5CoC,waCDAM,aACnB,SAAAA,IAAe/C,EAAAC,KAAA8C,GACb9C,KAAK+C,uBACL/C,KAAKgD,yBAILhD,KAAK3D,+EAQiB,IAAAqG,EAAA1C,KACtB1D,OAAOyC,iBAAiB,UAAW,SAAAkE,GAAWP,EAAKrG,mBAAmB4G,EAAMnF,MAAO,IAAQ,GAC3FxB,OAAOyC,iBAAiB,QAAS,SAAAkE,GAAWP,EAAKrG,mBAAmB4G,EAAMnF,MAAO,IAAS,oDAS1FxB,OAAOyC,iBAAiB,aAQxB,SAA2BmE,GAEzBA,EAAIC,iBACJC,EAAQF,EAAIG,QAAQ,GAAGC,QACvBC,EAAQL,EAAIG,QAAQ,GAAGG,UAZ+B,GACxDlH,OAAOyC,iBAAiB,YAcxB,SAA0BmE,GAIxB,GAFAA,EAAIC,iBAECC,GAAUG,EAAf,CAIA,IAAIE,EAAMP,EAAIG,QAAQ,GAAGC,QACrBI,EAAMR,EAAIG,QAAQ,GAAGG,QAIrBG,EAAQJ,EAAQG,EADRN,EAAQK,EAIR,EACVG,EAAgBvH,mBAAhB,GAA0C,EAE1CuH,EAAgBvH,mBAAhB,GAA0C,EAIxCsH,EAAQ,IACVC,EAAgBvH,mBAAhB,GAA0C,GAK5C+G,EAAQ,KACRG,EAAQ,QA5C4C,GACtDjH,OAAOyC,iBAAiB,WA8CxB,SAAyBmE,GAEvBA,EAAIC,iBACJ/H,OAAOwC,KAAKgG,EAAgBvH,oBAAoBwB,QAAQ,SAAAC,GAAS8F,EAAgBvH,mBAAmByB,IAAO,MAjDzD,GAEpD,IAAIsF,EAAQ,KACRG,EAAQ,KACRK,EAAkB5D,qDAsDtB,OAAOA,KAAK3D,sCAtFKyG","file":"bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c58a24cd141611aa9a5b","'use strict'\r\n\r\nimport AudioManager from './application/AudioManager'\r\nimport AssetManager from './application/AssetManager'\r\nimport KeyboardEventHandler from './application/KeyboardEventHandler'\r\n\r\nlet socket = io()\r\nlet canvas = document.getElementById('game')\r\nlet keyEventHandler = new KeyboardEventHandler(canvas)\r\nlet audioManager = new AudioManager() // TODO Combine audio manager with asset manager to avoid duplicate code\r\nlet assetManager = new AssetManager()\r\nlet playerId // player id is registered here on socket connection\r\nlet ctx // graphics context\r\nlet spritesLoaded = false // set to true when asset manager finishes to start drawing\r\n\r\n/**\r\n * Sends user input to the server.\r\n */\r\nfunction update () {\r\n  socket.emit('movement', keyEventHandler.keyActionsRegister)\r\n  // Request new frame when ready. Allows the game to play in a loop in approximately 60fps\r\n  window.requestAnimationFrame(() => update())\r\n}\r\n\r\n/**\r\n * Listen to server sending objects to draw.\r\n * Contains the drawing loop\r\n */\r\nsocket.on('state', players => {\r\n  if (playerId && players[playerId] && spritesLoaded) {\r\n    console.log(players[playerId])\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    Object.keys(players).forEach(key => {\r\n      const player = players[key]\r\n      // Make sure to only draw players in the same area\r\n      if (player.viewport.areaId === players[playerId].viewport.areaId) {\r\n        ctx.drawImage(assetManager.getAsset(player.material.name), player.position._x, player.position._y, player.width, player.height)\r\n      }\r\n    })\r\n    // Draw all blocks\r\n    players[playerId].viewport.blocks.forEach(block => {\r\n      ctx.drawImage(assetManager.getAsset(block.material.name), block.position._x, block.position._y, block.width, block.height)\r\n    })\r\n    // Display health\r\n    let x = canvas.width - 35\r\n    let y = 5\r\n    for (let i = 0; i < players[playerId].lives; i++) {\r\n      ctx.drawImage(assetManager.getAsset('heart'), x, y, 30, 30)\r\n      x -= 30\r\n    }\r\n    if (players[playerId].jumping) {\r\n      // audioManager.playSound('jump') TODO Currently fires multiple times. Find a way to only play when the last jump sound ended\r\n    }\r\n  }\r\n})\r\n\r\n/**\r\n * Initializes all game Objects.\r\n */\r\nfunction init () {\r\n  // check if canvas is supported by browser\r\n  if (canvas.getContext) {\r\n    socket.emit('new player')\r\n    ctx = canvas.getContext('2d')\r\n    // Add all sprites and music files to the download queue\r\n    audioManager.queueDownload('ambient', 'assets/audio/ambient/ambient.mp3')\r\n    audioManager.queueDownload('jump', 'assets/audio/effects/jump.wav')\r\n    assetManager.queueDownload('background', 'assets/textures/background.png')\r\n    assetManager.queueDownload('player', 'assets/textures/player.png')\r\n    assetManager.queueDownload('stone-block', 'assets/textures/stone-block.jpg')\r\n    assetManager.queueDownload('heart', 'assets/textures/heart.png')\r\n    audioManager.loadAll(() => {\r\n      audioManager.playSound('ambient', true)\r\n      // Download all sprites\r\n      assetManager.downLoadAll(() => {\r\n        update()\r\n        // Draw Background only once to improve performance\r\n        document.getElementById('background').getContext('2d').drawImage(assetManager.getAsset('background'), 0, 0, canvas.width, canvas.height)\r\n        // tells socket.on(state) that all sprites needed for drawing are downloaded\r\n        spritesLoaded = true\r\n      })\r\n    })\r\n  } else {\r\n    document.getElementById('unsupported').textContent = 'Please update your browser or download another one which supports HTML5'\r\n  }\r\n}\r\n\r\nsocket.on('connect', function () {\r\n  // Tell server to add this player\r\n  socket.emit('new player')\r\n  // remember socket id to identify current player when drawing\r\n  playerId = socket.io.engine.id\r\n})\r\n\r\n/**\r\n * modern browser equivalent of jQuery $(document).ready()\r\n */\r\ndocument.addEventListener('DOMContentLoaded', init())\r\n\r\n/**\r\n * Shim for animation loop.\r\n * Selects one that's available or uses fallback with setTimeout.\r\n */\r\nwindow.requestAnimFrame = (function () {\r\n  return window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    function (callback, element) {\r\n      window.setTimeout(callback, 1000 / 60)\r\n    }\r\n})()\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.js","/**\n * Audio asset manager.\n * TODO: Merge with AssetManager to eliminate duplicate code.\n *\n * @author Daniel Peters\n * @version 1.1\n */\nexport default class AudioManager {\n  constructor () {\n    this.bufferCache = []\n    this.downloadQueue = []\n    this.succesCount = 0\n    this.errorCount = 0\n\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || window.webkitAudioContext\n      this.context = new AudioContext()\n    } catch (e) {\n      alert('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   * Queue an audio file for download.\n   *\n   * @param {string} name name of the audio file\n   * @param {string} path location of the audio file\n   */\n  queueDownload (name, path) {\n    this.downloadQueue.push({name: name, path: path})\n  }\n\n  /**\n   * Download all files and execute callback function when done.\n   *\n   * @param callback function to be executed when downloading is done\n   */\n  loadAll (callback) {\n    if (this.downloadQueue.length === 0) {\n      callback()\n    }\n    let managerInstance = this\n    this.downloadQueue.forEach(item => {\n      managerInstance.load(item.name, item.path, callback)\n    })\n  }\n\n  /**\n   * Build an AJAX Request to load audio file into the buffer cache.\n   *\n   * @param name file name\n   * @param path location of the file\n   * @param callback function to execute on done\n   */\n  load (name, path, callback) {\n    let instance = this\n    let request = new XMLHttpRequest()\n\n    request.open('GET', path, true)\n    request.responseType = 'arraybuffer'\n\n    // Decode asynchronously\n    request.onload = function () {\n      instance.context.decodeAudioData(\n        request.response, buffer => {\n          instance.bufferCache[name] = buffer\n          instance.succesCount += 1\n\n          if (instance.done()) {\n            callback()\n          }\n        }\n      )\n    }\n\n    // Register error\n    request.onerror = function () {\n      instance.errorCount += 1\n\n      if (instance.done()) {\n        callback()\n      }\n    }\n    request.send()\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param name filename\n   * @param loop set to true for looped sounds like ambient music\n   */\n  playSound (name, loop = false) {\n    let sound = this.context.createBufferSource()\n\n    sound.buffer = this.bufferCache[name]\n    sound.connect(this.context.destination)\n    if (loop) {\n      sound.loop = loop\n      sound.loopEnd = Math.floor(sound.buffer.duration)\n    }\n    sound.start(0)\n  }\n\n  /**\n   * Check if downloading is finished.\n   * @returns {boolean}\n   */\n  done () {\n    return this.downloadQueue.length === this.succesCount + this.errorCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/AudioManager.js","/**\n * Texture asset manager.\n * TODO: Merge with AudioManager to eliminate duplicate code.\n *\n * @author Daniel Peters\n * @version 1.1\n */\nexport default class AssetManager {\n  constructor () {\n    this.downloadQueue = []\n    this.cache = {}\n    this.succesCount = 0\n    this.errorCount = 0\n  }\n\n  /**\n   * Queue an image to download.\n   *\n   * @param {string} name name of file\n   * @param {string} path location of file\n   */\n  queueDownload (name, path) {\n    this.downloadQueue.push({name: name, path: path})\n  }\n\n  /**\n   * Download all queued items and execute the callback function ond finish.\n   *\n   * @param callback function go be executed on download end\n   */\n  downLoadAll (callback) {\n    if (this.downloadQueue.length === 0) {\n      callback()\n    }\n\n    let managerInstance = this\n    this.downloadQueue.forEach(item => {\n      let img = new Image()\n      img.addEventListener('load', () => {\n        managerInstance.succesCount += 1\n\n        if (managerInstance.done()) {\n          callback()\n        }\n      }, false)\n      img.addEventListener('error', function () {\n        managerInstance.errorCount += 1\n\n        if (managerInstance.done()) {\n          callback()\n        }\n      }, false)\n      img.src = item.path\n      this.cache[item.name] = img\n    })\n  }\n\n  /**\n   * Get asset by name.\n   *\n   * @param {string} name asset name\n   */\n  getAsset (name) {\n    return this.cache[name]\n  }\n\n  /**\n   * Check if downloading is done.\n   *\n   * @returns {boolean} true when downloading done\n   */\n  done () {\n    return this.downloadQueue.length === this.succesCount + this.errorCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/AssetManager.js","/**\n * Input manager.\n *\n * @author Daniel Peters\n * @version 2.0\n */\nexport default class KeyboardEventHandler {\n  constructor () {\n    this.initializeKeyHandler()\n    this.initializeTouchHandler()\n\n    // All keystrokes and touch swipes are registered here\n    // This object is then sent to the server to process player movement\n    this.keyActionsRegister = {}\n  }\n\n  /**\n   * Handle keyboard key presses.\n   * Only booleans are set to express the movement direction intention\n   * This allows the separation of keystrokes from actual movement.\n   */\n  initializeKeyHandler () {\n    window.addEventListener('keydown', event => { this.keyActionsRegister[event.key] = true }, false)\n    window.addEventListener('keyup', event => { this.keyActionsRegister[event.key] = false }, false)\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler () {\n    // Register the event listeners\n    window.addEventListener('touchstart', handleTouchStart, false)\n    window.addEventListener('touchmove', handleTouchMove, false)\n    window.addEventListener('touchend', handleTouchEnd, false)\n\n    let xDown = null\n    let yDown = null\n    let handlerInstance = this\n\n    function handleTouchStart (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      xDown = evt.touches[0].clientX\n      yDown = evt.touches[0].clientY\n    }\n\n    function handleTouchMove (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      // do nothing if no touch direction is registered\n      if (!xDown || !yDown) {\n        return\n      }\n\n      let xUp = evt.touches[0].clientX\n      let yUp = evt.touches[0].clientY\n\n      // Subtract start currently touched location from start location\n      let xDiff = xDown - xUp\n      let yDiff = yDown - yUp\n\n      // Positive values equals left. Negative values equals right\n      if (xDiff > 0) {\n        handlerInstance.keyActionsRegister['a'] = true\n      } else {\n        handlerInstance.keyActionsRegister['d'] = true\n      }\n\n      // Positive = up. Negative = down\n      if (yDiff > 0) {\n        handlerInstance.keyActionsRegister['w'] = true\n      } else {\n        /* down swipe */\n      }\n      /* reset values */\n      xDown = null\n      yDown = null\n    }\n\n    function handleTouchEnd (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      Object.keys(handlerInstance.keyActionsRegister).forEach(key => { handlerInstance.keyActionsRegister[key] = false })\n    }\n  }\n\n  /**\n   * Get registered keyboard input and touch swipes\n   * @returns {*}\n   */\n  getKeyActionsRegister () {\n    return this.keyActionsRegister\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/KeyboardEventHandler.js"]}