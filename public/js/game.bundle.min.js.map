{"version":3,"sources":["webpack:/webpack/bootstrap 086fe4a808d659875651","webpack:///src/client/app.js","webpack:///src/client/application/GameClient.js","webpack:///src/client/application/AssetManager.js","webpack:///src/client/graphics/2D/SpriteSheet.js","webpack:///src/client/application/InputManager.js","webpack:///src/client/graphics/2D/Animation.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","socket","io","remote","_Remote2","update","_GameClient2","document","getElementById","client","init","render","players","emit","GameClient","_createClass","defineProperties","target","props","length","descriptor","writable","key","Constructor","protoProps","staticProps","_AssetManager2","_InputManager2","_classCallCheck","canvas","this","inputManager","assetManager","spritesLoaded","observers","push","ctx","playerId","animations","registerLoop","window","value","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","_this","getContext","queueDownload","frameWidth","frameHeight","loadAll","idle","_Animation2","getSpriteSheet","coin","current","playSound","left","drawImage","getSprite","width","height","textContent","_this2","currentPlayer","find","player","jumping","grounded","registeredInputs","clearRect","viewport","areaId","_this3","draw","position","_x","_y","forEach","type","block","x","lives","fillStyle","fillText","coins","toString","instance","TypeError","AssetManager","sprite","spriteSheet","succesCount","errorCount","initAudioContext","e","AudioContext","webkitAudioContext","alert","opts","path","undefined","arguments","queue","loadAudio","item","loadSprite","loadSpriteSheet","request","XMLHttpRequest","responseType","onload","audio","context","response","buffer","cache","done","onerror","img","src","_SpriteSheet2","sound","createBufferSource","loop","destination","start","Math","floor","duration","Image","_image","_framesPerRow","addEventListener","sourcePath","_frameWidth","_frameHeight","set","Error","_sourcePath","image","framesPerRow","InputManager","initializeKeyHandler","initializeTouchHandler","observer","event","evt","yDown","xDown","touches","clientX","preventDefault","yUp","clientY","yDiff","handlerInstance","keys","handleTouchStart","offsetBottom","sequence","currentFrame","counter","frame","end","speed","col","row"],"mappings":"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","file":"game.bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 086fe4a808d659875651","'use strict'\r\n\r\nimport GameClient from './application/GameClient'\r\n\r\nlet socket = io()\r\nlet playerId = null\r\n/**\r\n * modern browser equivalent of jQuery $(document).ready()\r\n */\r\nlet remote = {\r\n  update: data => socket.emit('input', data)\r\n}\r\nlet client = new GameClient(playerId, remote, document.getElementById('game'))\r\nclient.init()\r\n\r\n/**\r\n * Listen to remote sending objects to draw.\r\n * Contains the drawing loop\r\n */\r\nsocket.on('state', players => {\r\n  client.render(players)\r\n})\r\n\r\n/**\r\n * Initialize player id on remote connection\r\n */\r\nsocket.on('connect', () => {\r\n  socket.emit('new player')\r\n  playerId = socket.id\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.js","'use strict'\nimport AssetManager from './AssetManager'\nimport InputManager from './InputManager'\nimport Animation from './../graphics/2D/Animation'\n\nexport default class GameClient {\n  constructor (playerId, remote, canvas) {\n    this.canvas = canvas\n    this.inputManager = new InputManager(canvas)\n    this.inputManager.observers.push(remote)\n    this.assetManager = new AssetManager()\n    this.spritesLoaded = false\n    this.ctx = null\n    this.playerId = playerId\n    this.animations = {}\n    this.registerLoop()\n  }\n\n  /**\n   * Shim for animation loop.\n   * Selects one that's available or uses fallback with setTimeout.\n   */\n  registerLoop () {\n    window.requestAnimFrame = (() => {\n      return window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function (callback, element) {\n          window.setTimeout(callback, 1000 / 60)\n        }\n    })()\n  }\n\n  init () {\n    // check if canvas is supported by browser\n    if (this.canvas.getContext) {\n      this.ctx = this.canvas.getContext('2d')\n      // Add all sprites and music files to the download queue\n      this.assetManager.queueDownload('ambient', 'assets/audio/ambient/ambient.mp3', 'audio')\n      this.assetManager.queueDownload('jump', 'assets/audio/effects/jump.wav', 'audio')\n      this.assetManager.queueDownload('background', 'assets/textures/background.png', 'texture')\n      this.assetManager.queueDownload('player', 'assets/textures/player.png', 'texture')\n      this.assetManager.queueDownload('stone', 'assets/textures/stone-block.jpg', 'texture')\n      this.assetManager.queueDownload('heart', 'assets/textures/heart.png', 'texture')\n      this.assetManager.queueDownload('coin', 'assets/textures/coin.png', 'texture')\n      this.assetManager.queueDownload('playerSheet', 'assets/textures/test.png', 'spriteSheet', {\n        frameWidth: 32,\n        frameHeight: 64\n      })\n      this.assetManager.queueDownload('coinSheet', 'assets/textures/coin-sprite-animation-sprite-sheet.png', 'spriteSheet', {\n        frameWidth: 44, frameHeight: 44\n      })\n      this.assetManager.loadAll(() => {\n        this.animations.right = new Animation(this.assetManager.getSpriteSheet('playerSheet'), 3, 3, 6, 12)\n        this.animations.left = new Animation(this.assetManager.getSpriteSheet('playerSheet'), 3, 3, 6, 12)\n        this.animations.idle = new Animation(this.assetManager.getSpriteSheet('playerSheet'), 10, 0, 2, 12)\n        this.animations.coin = new Animation(this.assetManager.getSpriteSheet('coinSheet'), 3, 0, 9)\n        this.animations.current = this.animations.left\n        // Play ambient sound\n        this.assetManager.playSound('ambient', true)\n        // Draw Background only once to improve performance\n        document.getElementById('background').getContext('2d').drawImage(this.assetManager.getSprite('background'), 0, 0, this.canvas.width, this.canvas.height)\n        // make sure that all sprites needed for drawing are downloaded\n        this.spritesLoaded = true\n        this.update()\n      })\n    } else {\n      document.getElementById('unsupported').textContent = 'Please update your browser or download another one which supports HTML5'\n    }\n  }\n\n  update () {\n    this.inputManager.notify()\n    // Request new frame when ready. Allows the game to play in a loop in approximately 60fps\n    window.requestAnimationFrame(() => this.update())\n  }\n\n  /**\n   * Draw all objects.\n   * @param players player objects with objects within their viewport\n   */\n  render (players) {\n    let currentPlayer = players.find(player => { return player.id === this.playerId })\n    if (this.playerId && currentPlayer && this.spritesLoaded) {\n      if (this.inputManager.registeredInputs['w'] || this.inputManager.registeredInputs[' ']) {\n        // Check if players is not already jumping\n        if (!currentPlayer.jumping && currentPlayer.grounded) {\n          this.assetManager.playSound('jump')\n        }\n      }\n      this.animations.current.update()\n      this.animations.coin.update()\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n      players.forEach(player => {\n        // Make sure to only draw players in the same area\n        if (player.viewport.areaId === currentPlayer.viewport.areaId) {\n          if (player.registeredInputs['a']) {\n            this.animations.current = this.animations.left\n          }\n          if (player.registeredInputs['d']) {\n            this.animations.current = this.animations.right\n          }\n          if (!player.registeredInputs['d'] && !player.registeredInputs['a']) {\n            this.animations.current = this.animations.idle\n          }\n          this.animations.current.draw(this.ctx, player.position._x, player.position._y, player.width, player.height)\n        }\n      })\n      // Draw all blocks\n      currentPlayer.viewport.blocks.forEach(block => {\n        if (block.type === 'stone') {\n          this.ctx.drawImage(this.assetManager.getSprite(block.type), block.position._x, block.position._y, block.width, block.height)\n        } else if (block.type === 'coin') {\n          this.animations.coin.draw(this.ctx, block.position._x, block.position._y, block.width, block.height)\n        }\n      })\n      // Display health\n      let x = this.canvas.width - 35\n      for (let i = 0; i < currentPlayer.lives; i++) {\n        this.ctx.drawImage(this.assetManager.getSprite('heart'), x, 5, 30, 30)\n        x -= 30\n      }\n      this.ctx.drawImage(this.assetManager.getSprite('coin'), 5, 5, 30, 30)\n      this.ctx.font = '30px sans-serif'\n      this.ctx.fillStyle = '#081966'\n      this.ctx.fillText(currentPlayer.coins.toString(), 35, 30)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/GameClient.js","import SpriteSheet from './../graphics/2D/SpriteSheet'\n\n/**\n * Asset manager.\n *\n * @author Daniel Peters\n * @version 2.0\n */\nexport default class AssetManager {\n  constructor () {\n    this.cache = {\n      audio: [],\n      sprite: [],\n      spriteSheet: []\n    }\n    this.bufferCache = []\n    this.queue = []\n    this.succesCount = 0\n    this.errorCount = 0\n    this.initAudioContext()\n  }\n\n  initAudioContext () {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || window.webkitAudioContext\n      this.context = new AudioContext()\n    } catch (e) {\n      alert('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   * Queue an audio file for download.\n   *\n   * @param {string} name name of the audio file\n   * @param {string} path location of the audio file\n   * @param {string} type of file\n   * @param {{}} opts additional options\n   */\n  queueDownload (name, path, type, opts = {}) {\n    this.queue.push({name: name, path: path, type: type, opts: opts})\n  }\n\n  /**\n   * Download all files and execute callback function when done.\n   *\n   * @param callback function to be executed when downloading is done\n   */\n  loadAll (callback) {\n    if (this.queue.length === 0) {\n      callback()\n    }\n    this.queue.forEach(item => {\n      if (item.type === 'audio') {\n        this.loadAudio(item, callback)\n      } else if (item.type === 'texture') {\n        this.loadSprite(item, callback)\n      } else if (item.type === 'spriteSheet') {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param {{}} item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback) {\n    let request = new XMLHttpRequest()\n\n    request.open('GET', item.path, true)\n    request.responseType = 'arraybuffer'\n\n    // Decode asynchronously\n    request.onload = () => {\n      this.context.decodeAudioData(\n        request.response, buffer => {\n          this.cache.audio[item.name] = buffer\n          this.succesCount += 1\n          if (this.done()) {\n            callback()\n          }\n        }\n      )\n    }\n\n    // Register error\n    request.onerror = () => {\n      this.errorCount += 1\n      if (this.done()) {\n        callback()\n      }\n    }\n    request.send()\n  }\n\n  /**\n   * Load simple sprites as image.\n   *\n   * @param item sprite info\n   * @param callback called upon downloading all\n   */\n  loadSprite (item, callback) {\n    let img = new Image()\n    img.addEventListener('load', () => {\n      this.succesCount += 1\n\n      if (this.done()) {\n        callback()\n      }\n    }, false)\n    img.addEventListener('error', () => {\n      this.errorCount += 1\n\n      if (this.done()) {\n        callback()\n      }\n    }, false)\n    img.src = item.path\n    this.cache.sprite[item.name] = img\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback) {\n    this.cache.spriteSheet[item.name] = new SpriteSheet(item.path, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n    this.succesCount += 1\n    if (this.done()) {\n      callback()\n    }\n  }\n\n  /**\n   * Get sprite by name.\n   *\n   * @param {string} name sprite name\n   */\n  getSprite (name) {\n    return this.cache.sprite[name]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {string} name sprite sheet name\n   */\n  getSpriteSheet (name) {\n    return this.cache.spriteSheet[name]\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param name filename\n   * @param loop set to true for looped sounds like ambient music\n   */\n  playSound (name, loop = false) {\n    let sound = this.context.createBufferSource()\n\n    sound.buffer = this.cache.audio[name]\n    sound.connect(this.context.destination)\n    if (loop) {\n      sound.loop = loop\n      sound.loopEnd = Math.floor(sound.buffer.duration)\n    }\n    sound.start(0)\n  }\n\n  /**\n   * Check if downloading is finished.\n   * @returns {boolean}\n   */\n  done () {\n    return this.queue.length === this.succesCount + this.errorCount\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/AssetManager.js","/**\n * Sprite sheet definition.\n */\nexport default class SpriteSheet {\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   * @param sourcePath\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (sourcePath, frameWidth, frameHeight) {\n    this._image = new Image()\n    this._image.addEventListener('load', () => {\n      this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n    })\n    this._image.src = sourcePath\n    this._sourcePath = sourcePath\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  get sourcePath () {\n    return this._sourcePath\n  }\n\n  /**\n   *\n   * @param {string} sourcePath\n   */\n  set sourcePath (sourcePath) {\n    if (typeof sourcePath !== 'string') {\n      throw new Error('Param sourcePath must be of type number!')\n    }\n    this._sourcePath = sourcePath\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth () {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth) {\n    if (typeof frameWidth !== 'number') {\n      throw new Error('Param frameWidth must be of type number!')\n    }\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight () {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight) {\n    if (typeof frameHeight !== 'number') {\n      throw new Error('Param frameHeight must be of type number!')\n    }\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image () {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param image must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow () {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow) {\n    this._framesPerRow = framesPerRow\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/SpriteSheet.js","/**\n * Input manager.\n *\n * @author Daniel Peters\n * @version 2.0\n */\nexport default class InputManager {\n  constructor () {\n    this.initializeKeyHandler()\n    this.initializeTouchHandler()\n\n    // All keystrokes and touch swipes are registered here\n    // This object is then sent to the remote to process player movement\n    this.registeredInputs = {}\n    this.observers = []\n  }\n\n  notify () {\n    this.observers.forEach(observer => observer.update(this.registeredInputs))\n  }\n\n  /**\n   * Handle keyboard key presses.\n   * Only booleans are set to express the movement direction intention\n   * This allows the separation of keystrokes from actual movement.\n   */\n  initializeKeyHandler () {\n    window.addEventListener('keydown', event => { this.registeredInputs[event.key] = true }, false)\n    window.addEventListener('keyup', event => { this.registeredInputs[event.key] = false }, false)\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler () {\n    // Register the event listeners\n    window.addEventListener('touchstart', handleTouchStart, false)\n    window.addEventListener('touchmove', handleTouchMove, false)\n    window.addEventListener('touchend', handleTouchEnd, false)\n\n    let xDown = null\n    let yDown = null\n    let handlerInstance = this\n\n    function handleTouchStart (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      xDown = evt.touches[0].clientX\n      yDown = evt.touches[0].clientY\n    }\n\n    function handleTouchMove (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      // do nothing if no touch direction is registered\n      if (!xDown || !yDown) {\n        return\n      }\n\n      let xUp = evt.touches[0].clientX\n      let yUp = evt.touches[0].clientY\n\n      // Subtract start currently touched location from start location\n      let xDiff = xDown - xUp\n      let yDiff = yDown - yUp\n\n      // Positive values equals left. Negative values equals right\n      if (xDiff > 0) {\n        handlerInstance.registeredInputs['a'] = true\n      } else {\n        handlerInstance.registeredInputs['d'] = true\n      }\n\n      // Positive = up. Negative = down\n      if (yDiff > 0) {\n        handlerInstance.registeredInputs['w'] = true\n      } else {\n        /* down swipe */\n      }\n      /* reset values */\n      xDown = null\n      yDown = null\n    }\n\n    function handleTouchEnd (evt) {\n      // Prevent divide scrolling\n      evt.preventDefault()\n      Object.keys(handlerInstance.registeredInputs).forEach(key => { handlerInstance.registeredInputs[key] = false })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/InputManager.js","/**\n * Implements sprite animation using sprite sheet.\n *\n * @author Daniel Peters\n * @version 0.3\n */\nexport default class Animation {\n  /**\n   * Constructor Sets all animation data.\n   *\n   * @param {SpriteSheet} spriteSheet corresponding sprite sheet\n   * @param {number} speed animation speed\n   * @param {number} start animation start frame\n   * @param {number} end animation end frame\n   * @param {number} offsetBottom drawing offset at the bottom of source image\n   */\n  constructor (spriteSheet, speed, start, end, offsetBottom = 0) {\n    this.spriteSheet = spriteSheet\n    this.speed = speed\n    this.sequence = []\n    this.currentFrame = 0\n    this.counter = 0\n    this.offsetBottom = offsetBottom\n\n    for (let frame = start; frame <= end; frame++) {\n      this.sequence.push(frame)\n    }\n  }\n\n  /**\n   * Update animation frames.\n   */\n  update () {\n    if (this.counter === (this.speed - 1)) {\n      this.currentFrame = (this.currentFrame + 1) % this.sequence.length\n    }\n    this.counter = (this.counter + 1) % this.speed\n  }\n\n  /**\n   * Draw current frame\n   * @param ctx canvas context\n   * @param x location x\n   * @param y location y\n   * @param width display width\n   * @param height display height\n   */\n  draw (ctx, x, y, width, height) {\n    let row = Math.floor(this.sequence[this.currentFrame] / this.spriteSheet.framesPerRow)\n    let col = Math.floor(this.sequence[this.currentFrame] % this.spriteSheet.framesPerRow)\n    ctx.drawImage(\n      this.spriteSheet.image,\n      col * this.spriteSheet.frameWidth,\n      row * this.spriteSheet.frameHeight,\n      this.spriteSheet.frameWidth,\n      this.spriteSheet.frameHeight - this.offsetBottom,\n      x,\n      y,\n      width,\n      height\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/Animation.js"]}