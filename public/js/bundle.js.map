{"version":3,"sources":["webpack:///webpack/bootstrap 07a05560342341f20772","webpack:///./src/client/app.js","webpack:///./src/client/application/AssetManager.js","webpack:///./src/client/graphics/2D/SpriteSheet.js","webpack:///./src/client/application/InputManager.js","webpack:///./src/client/graphics/2D/Animation.js"],"names":["socket","io","canvas","document","getElementById","inputManager","assetManager","playerId","ctx","spritesLoaded","animationRight","animationLeft","animationIdle","currentAnimation","window","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","init","getContext","emit","queueDownload","loadAll","getSpriteSheet","playSound","update","drawImage","getSprite","width","height","textContent","registeredInputs","draw","players","clearRect","Object","keys","forEach","player","key","viewport","areaId","position","_x","_y","blocks","block","material","name","x","y","i","lives","addEventListener","on","engine","id","AssetManager","cache","audio","sprite","spriteSheet","bufferCache","queue","succesCount","errorCount","initAudioContext","AudioContext","webkitAudioContext","context","e","alert","path","type","push","length","item","loadAudio","loadSprite","loadSpriteSheet","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","done","onerror","send","img","Image","src","loop","sound","createBufferSource","connect","destination","loopEnd","Math","floor","duration","start","SpriteSheet","sourcePath","frameWidth","frameHeight","image","framesPerRow","InputManager","initializeKeyHandler","initializeTouchHandler","event","handleTouchStart","handleTouchMove","handleTouchEnd","xDown","yDown","handlerInstance","evt","preventDefault","touches","clientX","clientY","xUp","yUp","xDiff","yDiff","Animation","speed","end","offsetBottom","sequence","currentFrame","counter","frame","row","col"],"mappings":"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","file":"./public/js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 07a05560342341f20772","'use strict'\r\n\r\nimport AssetManager from './application/AssetManager'\r\nimport InputManager from './application/InputManager'\r\nimport Animation from './graphics/2D/Animation'\r\n\r\nlet socket = io()\r\nlet canvas = document.getElementById('game')\r\nlet inputManager = new InputManager(canvas)\r\nlet assetManager = new AssetManager()\r\nlet playerId // player id is registered here on socket connection\r\nlet ctx // graphics context\r\nlet spritesLoaded = false // set to true when asset manager finishes to start drawing\r\nlet animationRight\r\nlet animationLeft\r\nlet animationIdle\r\nlet currentAnimation\r\n\r\n/**\r\n * Shim for animation loop.\r\n * Selects one that's available or uses fallback with setTimeout.\r\n */\r\nwindow.requestAnimFrame = (() => {\r\n  return window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    function (callback, element) {\r\n      window.setTimeout(callback, 1000 / 60)\r\n    }\r\n})()\r\n\r\n/**\r\n * Download all game assets.\r\n */\r\nfunction init () {\r\n  // check if canvas is supported by browser\r\n  if (canvas.getContext) {\r\n    socket.emit('new player')\r\n    ctx = canvas.getContext('2d')\r\n    // Add all sprites and music files to the download queue\r\n    assetManager.queueDownload('ambient', 'assets/audio/ambient/ambient.mp3', 'audio')\r\n    assetManager.queueDownload('jump', 'assets/audio/effects/jump.wav', 'audio')\r\n    assetManager.queueDownload('background', 'assets/textures/background.png', 'texture')\r\n    assetManager.queueDownload('player', 'assets/textures/player.png', 'texture')\r\n    assetManager.queueDownload('stone-block', 'assets/textures/stone-block.jpg', 'texture')\r\n    assetManager.queueDownload('heart', 'assets/textures/heart.png', 'texture')\r\n    assetManager.queueDownload('playerSheet', 'assets/textures/test.png', 'spriteSheet')\r\n    assetManager.loadAll(() => {\r\n      animationRight = new Animation(assetManager.getSpriteSheet('playerSheet'), 3, 3, 6, 12)\r\n      animationLeft = new Animation(assetManager.getSpriteSheet('playerSheet'), 3, 3, 6, 12)\r\n      animationIdle = new Animation(assetManager.getSpriteSheet('playerSheet'), 10, 0, 2, 12)\r\n      currentAnimation = animationLeft\r\n      // Play ambient sound\r\n      assetManager.playSound('ambient', true)\r\n      update()\r\n      // Draw Background only once to improve performance\r\n      document.getElementById('background').getContext('2d').drawImage(assetManager.getSprite('background'), 0, 0, canvas.width, canvas.height)\r\n      // tells socket.on(state) that all sprites needed for drawing are downloaded\r\n      spritesLoaded = true\r\n    })\r\n  } else {\r\n    document.getElementById('unsupported').textContent = 'Please update your browser or download another one which supports HTML5'\r\n  }\r\n}\r\n\r\n/**\r\n * Sends user input to the server.\r\n */\r\nfunction update () {\r\n  socket.emit('movement', inputManager.registeredInputs)\r\n  // Request new frame when ready. Allows the game to play in a loop in approximately 60fps\r\n  window.requestAnimationFrame(() => update())\r\n}\r\n\r\nfunction draw (players) {\r\n  if (playerId && players[playerId] && spritesLoaded) {\r\n    currentAnimation.update()\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    Object.keys(players).forEach(key => {\r\n      const player = players[key]\r\n      // Make sure to only draw players in the same area\r\n      if (player.viewport.areaId === players[playerId].viewport.areaId) {\r\n        if (player.registeredInputs['a']) {\r\n          currentAnimation = animationLeft\r\n        }\r\n        if (player.registeredInputs['d']) {\r\n          currentAnimation = animationRight\r\n        }\r\n        if (!player.registeredInputs['d'] && !player.registeredInputs['a']) {\r\n          currentAnimation = animationIdle\r\n        }\r\n        currentAnimation.draw(ctx, player.position._x, player.position._y, player.width, player.height)\r\n      }\r\n    })\r\n    // Draw all blocks\r\n    players[playerId].viewport.blocks.forEach(block => {\r\n      ctx.drawImage(assetManager.getSprite(block.material.name), block.position._x, block.position._y, block.width, block.height)\r\n    })\r\n    // Display health\r\n    let x = canvas.width - 35\r\n    let y = 5\r\n    for (let i = 0; i < players[playerId].lives; i++) {\r\n      ctx.drawImage(assetManager.getSprite('heart'), x, y, 30, 30)\r\n      x -= 30\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * modern browser equivalent of jQuery $(document).ready()\r\n */\r\ndocument.addEventListener('DOMContentLoaded', init())\r\n\r\n/**\r\n * Initialize player id on socket connection\r\n */\r\nsocket.on('connect', () => {\r\n  // Tell server to add this player\r\n  socket.emit('new player')\r\n  // remember socket id to identify current player when drawing\r\n  playerId = socket.io.engine.id\r\n})\r\n\r\n/**\r\n * Listen to server sending objects to draw.\r\n * Contains the drawing loop\r\n */\r\nsocket.on('state', players => {\r\n  draw(players)\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.js","import SpriteSheet from './../graphics/2D/SpriteSheet'\r\n\r\n/**\r\n * Asset manager.\r\n *\r\n * @author Daniel Peters\r\n * @version 2.0\r\n */\r\nexport default class AssetManager {\r\n  constructor () {\r\n    this.cache = {\r\n      audio: [],\r\n      sprite: [],\r\n      spriteSheet: []\r\n    }\r\n    this.bufferCache = []\r\n    this.queue = []\r\n    this.succesCount = 0\r\n    this.errorCount = 0\r\n    this.initAudioContext()\r\n  }\r\n\r\n  initAudioContext () {\r\n    try {\r\n      // Fix for browsers using prefixes\r\n      window.AudioContext = window.AudioContext || window.webkitAudioContext\r\n      this.context = new AudioContext()\r\n    } catch (e) {\r\n      alert('Web Audio API is not supported in this browser')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Queue an audio file for download.\r\n   *\r\n   * @param {string} name name of the audio file\r\n   * @param {string} path location of the audio file\r\n   * @param {string} type of file\r\n   */\r\n  queueDownload (name, path, type) {\r\n    this.queue.push({name: name, path: path, type: type})\r\n  }\r\n\r\n  /**\r\n   * Download all files and execute callback function when done.\r\n   *\r\n   * @param callback function to be executed when downloading is done\r\n   */\r\n  loadAll (callback) {\r\n    if (this.queue.length === 0) {\r\n      callback()\r\n    }\r\n    this.queue.forEach(item => {\r\n      if (item.type === 'audio') {\r\n        this.loadAudio(item, callback)\r\n      } else if (item.type === 'texture') {\r\n        this.loadSprite(item, callback)\r\n      } else if (item.type === 'spriteSheet') {\r\n        this.loadSpriteSheet(item, callback)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\r\n   *\r\n   * @param {{}} item object with name of file and path to file\r\n   * @param callback function to execute on done\r\n   */\r\n  loadAudio (item, callback) {\r\n    let request = new XMLHttpRequest()\r\n\r\n    request.open('GET', item.path, true)\r\n    request.responseType = 'arraybuffer'\r\n\r\n    // Decode asynchronously\r\n    request.onload = () => {\r\n      this.context.decodeAudioData(\r\n        request.response, buffer => {\r\n          this.cache.audio[item.name] = buffer\r\n          this.succesCount += 1\r\n          if (this.done()) {\r\n            callback()\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    // Register error\r\n    request.onerror = () => {\r\n      this.errorCount += 1\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    }\r\n    request.send()\r\n  }\r\n\r\n  /**\r\n   * Load simple sprites as image.\r\n   *\r\n   * @param item sprite info\r\n   * @param callback called upon downloading all\r\n   */\r\n  loadSprite (item, callback) {\r\n    let img = new Image()\r\n    img.addEventListener('load', () => {\r\n      this.succesCount += 1\r\n\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    }, false)\r\n    img.addEventListener('error', () => {\r\n      this.errorCount += 1\r\n\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    }, false)\r\n    img.src = item.path\r\n    this.cache.sprite[item.name] = img\r\n  }\r\n\r\n  /**\r\n   * Load sprites sheet.\r\n   *\r\n   * @param item sprite sheet info\r\n   * @param callback called upon downloading all\r\n   */\r\n  loadSpriteSheet (item, callback) {\r\n    this.cache.spriteSheet[item.name] = new SpriteSheet(item.path, 32, 64)\r\n    this.succesCount += 1\r\n    if (this.done()) {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get sprite by name.\r\n   *\r\n   * @param {string} name sprite name\r\n   */\r\n  getSprite (name) {\r\n    return this.cache.sprite[name]\r\n  }\r\n\r\n  /**\r\n   * Get sprite sheet by name.\r\n   *\r\n   * @param {string} name sprite sheet name\r\n   */\r\n  getSpriteSheet (name) {\r\n    return this.cache.spriteSheet[name]\r\n  }\r\n\r\n  /**\r\n   * Create an audio buffer source node from cached buffer.\r\n   * Send it to the destination of the audio context and play it.\r\n   *\r\n   * @param name filename\r\n   * @param loop set to true for looped sounds like ambient music\r\n   */\r\n  playSound (name, loop = false) {\r\n    let sound = this.context.createBufferSource()\r\n\r\n    sound.buffer = this.cache.audio[name]\r\n    sound.connect(this.context.destination)\r\n    if (loop) {\r\n      sound.loop = loop\r\n      sound.loopEnd = Math.floor(sound.buffer.duration)\r\n    }\r\n    sound.start(0)\r\n  }\r\n\r\n  /**\r\n   * Check if downloading is finished.\r\n   * @returns {boolean}\r\n   */\r\n  done () {\r\n    return this.queue.length === this.succesCount + this.errorCount\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/AssetManager.js","/**\r\n * Sprite sheet definition.\r\n */\r\nexport default class SpriteSheet {\r\n  /**\r\n   * Constructor. Sets frame dimensions and calculates number of frames.\r\n   * @param sourcePath\r\n   * @param frameWidth\r\n   * @param frameHeight\r\n   */\r\n  constructor (sourcePath, frameWidth, frameHeight) {\r\n    this.image = new Image()\r\n    this.frameWidth = frameWidth\r\n    this.frameHeight = frameHeight\r\n\r\n    this.image.addEventListener('load', () => {\r\n      this.framesPerRow = Math.floor(this.image.width / this.frameWidth)\r\n    })\r\n\r\n    this.image.src = sourcePath\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/SpriteSheet.js","/**\r\n * Input manager.\r\n *\r\n * @author Daniel Peters\r\n * @version 2.0\r\n */\r\nexport default class InputManager {\r\n  constructor () {\r\n    this.initializeKeyHandler()\r\n    this.initializeTouchHandler()\r\n\r\n    // All keystrokes and touch swipes are registered here\r\n    // This object is then sent to the server to process player movement\r\n    this.registeredInputs = {}\r\n  }\r\n\r\n  /**\r\n   * Handle keyboard key presses.\r\n   * Only booleans are set to express the movement direction intention\r\n   * This allows the separation of keystrokes from actual movement.\r\n   */\r\n  initializeKeyHandler () {\r\n    window.addEventListener('keydown', event => { this.registeredInputs[event.key] = true }, false)\r\n    window.addEventListener('keyup', event => { this.registeredInputs[event.key] = false }, false)\r\n  }\r\n\r\n  /**\r\n   * Maps swipe directions to key press booleans.\r\n   * Allows touch controls on mobile.\r\n   */\r\n  initializeTouchHandler () {\r\n    // Register the event listeners\r\n    window.addEventListener('touchstart', handleTouchStart, false)\r\n    window.addEventListener('touchmove', handleTouchMove, false)\r\n    window.addEventListener('touchend', handleTouchEnd, false)\r\n\r\n    let xDown = null\r\n    let yDown = null\r\n    let handlerInstance = this\r\n\r\n    function handleTouchStart (evt) {\r\n      // Prevent divide scrolling\r\n      evt.preventDefault()\r\n      xDown = evt.touches[0].clientX\r\n      yDown = evt.touches[0].clientY\r\n    }\r\n\r\n    function handleTouchMove (evt) {\r\n      // Prevent divide scrolling\r\n      evt.preventDefault()\r\n      // do nothing if no touch direction is registered\r\n      if (!xDown || !yDown) {\r\n        return\r\n      }\r\n\r\n      let xUp = evt.touches[0].clientX\r\n      let yUp = evt.touches[0].clientY\r\n\r\n      // Subtract start currently touched location from start location\r\n      let xDiff = xDown - xUp\r\n      let yDiff = yDown - yUp\r\n\r\n      // Positive values equals left. Negative values equals right\r\n      if (xDiff > 0) {\r\n        handlerInstance.registeredInputs['a'] = true\r\n      } else {\r\n        handlerInstance.registeredInputs['d'] = true\r\n      }\r\n\r\n      // Positive = up. Negative = down\r\n      if (yDiff > 0) {\r\n        handlerInstance.registeredInputs['w'] = true\r\n      } else {\r\n        /* down swipe */\r\n      }\r\n      /* reset values */\r\n      xDown = null\r\n      yDown = null\r\n    }\r\n\r\n    function handleTouchEnd (evt) {\r\n      // Prevent divide scrolling\r\n      evt.preventDefault()\r\n      Object.keys(handlerInstance.registeredInputs).forEach(key => { handlerInstance.registeredInputs[key] = false })\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/application/InputManager.js","/**\r\n * Implements sprite animation using sprite sheet.\r\n *\r\n * @author Daniel Peters\r\n * @version 0.3\r\n */\r\nexport default class Animation {\r\n  /**\r\n   * Constructor Sets all animation data.\r\n   *\r\n   * @param {SpriteSheet} spriteSheet corresponding sprite sheet\r\n   * @param {number} speed animation speed\r\n   * @param {number} start animation start frame\r\n   * @param {number} end animation end frame\r\n   * @param {number} offsetBottom drawing offset at the bottom of source image\r\n   */\r\n  constructor (spriteSheet, speed, start, end, offsetBottom = 0) {\r\n    this.spriteSheet = spriteSheet\r\n    this.speed = speed\r\n    this.sequence = []\r\n    this.currentFrame = 0\r\n    this.counter = 0\r\n    this.offsetBottom = offsetBottom\r\n\r\n    for (let frame = start; frame <= end; frame++) {\r\n      this.sequence.push(frame)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update animation frames.\r\n   */\r\n  update () {\r\n    if (this.counter === (this.speed - 1)) {\r\n      this.currentFrame = (this.currentFrame + 1) % this.sequence.length\r\n    }\r\n    this.counter = (this.counter + 1) % this.speed\r\n  }\r\n\r\n  /**\r\n   * Draw current frame\r\n   * @param ctx canvas context\r\n   * @param x location x\r\n   * @param y location y\r\n   * @param width display width\r\n   * @param height display height\r\n   */\r\n  draw (ctx, x, y, width, height) {\r\n    let row = Math.floor(this.sequence[this.currentFrame] / this.spriteSheet.framesPerRow)\r\n    let col = Math.floor(this.sequence[this.currentFrame] % this.spriteSheet.framesPerRow)\r\n    ctx.drawImage(\r\n      this.spriteSheet.image,\r\n      col * this.spriteSheet.frameWidth,\r\n      row * this.spriteSheet.frameHeight,\r\n      this.spriteSheet.frameWidth,\r\n      this.spriteSheet.frameHeight - this.offsetBottom,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/Animation.js"],"sourceRoot":""}